// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v6.31.1
// source: kurushimi/messages.proto

package matchmaker

import (
	matchmaker "github.com/emortalmc/proto-specs/gen/go/model/matchmaker"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TicketDeletedMessage_Reason int32

const (
	TicketDeletedMessage_GAME_MODE_DELETED TicketDeletedMessage_Reason = 0
	TicketDeletedMessage_MANUAL_DEQUEUE    TicketDeletedMessage_Reason = 1
	TicketDeletedMessage_MATCH_CREATED     TicketDeletedMessage_Reason = 2
)

// Enum value maps for TicketDeletedMessage_Reason.
var (
	TicketDeletedMessage_Reason_name = map[int32]string{
		0: "GAME_MODE_DELETED",
		1: "MANUAL_DEQUEUE",
		2: "MATCH_CREATED",
	}
	TicketDeletedMessage_Reason_value = map[string]int32{
		"GAME_MODE_DELETED": 0,
		"MANUAL_DEQUEUE":    1,
		"MATCH_CREATED":     2,
	}
)

func (x TicketDeletedMessage_Reason) Enum() *TicketDeletedMessage_Reason {
	p := new(TicketDeletedMessage_Reason)
	*p = x
	return p
}

func (x TicketDeletedMessage_Reason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TicketDeletedMessage_Reason) Descriptor() protoreflect.EnumDescriptor {
	return file_kurushimi_messages_proto_enumTypes[0].Descriptor()
}

func (TicketDeletedMessage_Reason) Type() protoreflect.EnumType {
	return &file_kurushimi_messages_proto_enumTypes[0]
}

func (x TicketDeletedMessage_Reason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TicketDeletedMessage_Reason.Descriptor instead.
func (TicketDeletedMessage_Reason) EnumDescriptor() ([]byte, []int) {
	return file_kurushimi_messages_proto_rawDescGZIP(), []int{2, 0}
}

type PendingMatchDeletedMessage_Reason int32

const (
	PendingMatchDeletedMessage_CANCELLED     PendingMatchDeletedMessage_Reason = 0
	PendingMatchDeletedMessage_MATCH_CREATED PendingMatchDeletedMessage_Reason = 1
)

// Enum value maps for PendingMatchDeletedMessage_Reason.
var (
	PendingMatchDeletedMessage_Reason_name = map[int32]string{
		0: "CANCELLED",
		1: "MATCH_CREATED",
	}
	PendingMatchDeletedMessage_Reason_value = map[string]int32{
		"CANCELLED":     0,
		"MATCH_CREATED": 1,
	}
)

func (x PendingMatchDeletedMessage_Reason) Enum() *PendingMatchDeletedMessage_Reason {
	p := new(PendingMatchDeletedMessage_Reason)
	*p = x
	return p
}

func (x PendingMatchDeletedMessage_Reason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PendingMatchDeletedMessage_Reason) Descriptor() protoreflect.EnumDescriptor {
	return file_kurushimi_messages_proto_enumTypes[1].Descriptor()
}

func (PendingMatchDeletedMessage_Reason) Type() protoreflect.EnumType {
	return &file_kurushimi_messages_proto_enumTypes[1]
}

func (x PendingMatchDeletedMessage_Reason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PendingMatchDeletedMessage_Reason.Descriptor instead.
func (PendingMatchDeletedMessage_Reason) EnumDescriptor() ([]byte, []int) {
	return file_kurushimi_messages_proto_rawDescGZIP(), []int{5, 0}
}

type TicketCreatedMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ticket        *matchmaker.Ticket     `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TicketCreatedMessage) Reset() {
	*x = TicketCreatedMessage{}
	mi := &file_kurushimi_messages_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TicketCreatedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketCreatedMessage) ProtoMessage() {}

func (x *TicketCreatedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_kurushimi_messages_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketCreatedMessage.ProtoReflect.Descriptor instead.
func (*TicketCreatedMessage) Descriptor() ([]byte, []int) {
	return file_kurushimi_messages_proto_rawDescGZIP(), []int{0}
}

func (x *TicketCreatedMessage) GetTicket() *matchmaker.Ticket {
	if x != nil {
		return x.Ticket
	}
	return nil
}

type TicketUpdatedMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NewTicket     *matchmaker.Ticket     `protobuf:"bytes,1,opt,name=new_ticket,json=newTicket,proto3" json:"new_ticket,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TicketUpdatedMessage) Reset() {
	*x = TicketUpdatedMessage{}
	mi := &file_kurushimi_messages_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TicketUpdatedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketUpdatedMessage) ProtoMessage() {}

func (x *TicketUpdatedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_kurushimi_messages_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketUpdatedMessage.ProtoReflect.Descriptor instead.
func (*TicketUpdatedMessage) Descriptor() ([]byte, []int) {
	return file_kurushimi_messages_proto_rawDescGZIP(), []int{1}
}

func (x *TicketUpdatedMessage) GetNewTicket() *matchmaker.Ticket {
	if x != nil {
		return x.NewTicket
	}
	return nil
}

// TicketDeletedMessage is sent when a ticket is deleted
// NOTE: This is not when a delete request is received, but when the removal gets processed.
// If this message is received, the ticket is no longer in any queue
// NOTE 2: This is not fired when a PendingMatch is converted to a Match. In that case, only a MatchCreatedMessage is sent.
type TicketDeletedMessage struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Ticket        *matchmaker.Ticket          `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	Reason        TicketDeletedMessage_Reason `protobuf:"varint,2,opt,name=reason,proto3,enum=emortal.kurushimi.messages.TicketDeletedMessage_Reason" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TicketDeletedMessage) Reset() {
	*x = TicketDeletedMessage{}
	mi := &file_kurushimi_messages_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TicketDeletedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketDeletedMessage) ProtoMessage() {}

func (x *TicketDeletedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_kurushimi_messages_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketDeletedMessage.ProtoReflect.Descriptor instead.
func (*TicketDeletedMessage) Descriptor() ([]byte, []int) {
	return file_kurushimi_messages_proto_rawDescGZIP(), []int{2}
}

func (x *TicketDeletedMessage) GetTicket() *matchmaker.Ticket {
	if x != nil {
		return x.Ticket
	}
	return nil
}

func (x *TicketDeletedMessage) GetReason() TicketDeletedMessage_Reason {
	if x != nil {
		return x.Reason
	}
	return TicketDeletedMessage_GAME_MODE_DELETED
}

type PendingMatchCreatedMessage struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	PendingMatch  *matchmaker.PendingMatch `protobuf:"bytes,1,opt,name=pending_match,json=pendingMatch,proto3" json:"pending_match,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PendingMatchCreatedMessage) Reset() {
	*x = PendingMatchCreatedMessage{}
	mi := &file_kurushimi_messages_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PendingMatchCreatedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PendingMatchCreatedMessage) ProtoMessage() {}

func (x *PendingMatchCreatedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_kurushimi_messages_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PendingMatchCreatedMessage.ProtoReflect.Descriptor instead.
func (*PendingMatchCreatedMessage) Descriptor() ([]byte, []int) {
	return file_kurushimi_messages_proto_rawDescGZIP(), []int{3}
}

func (x *PendingMatchCreatedMessage) GetPendingMatch() *matchmaker.PendingMatch {
	if x != nil {
		return x.PendingMatch
	}
	return nil
}

// PendingMatchUpdatedMessage is sent when players join/leave a pending match
// which can be used to update the UI with the player count
type PendingMatchUpdatedMessage struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	PendingMatch  *matchmaker.PendingMatch `protobuf:"bytes,1,opt,name=pending_match,json=pendingMatch,proto3" json:"pending_match,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PendingMatchUpdatedMessage) Reset() {
	*x = PendingMatchUpdatedMessage{}
	mi := &file_kurushimi_messages_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PendingMatchUpdatedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PendingMatchUpdatedMessage) ProtoMessage() {}

func (x *PendingMatchUpdatedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_kurushimi_messages_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PendingMatchUpdatedMessage.ProtoReflect.Descriptor instead.
func (*PendingMatchUpdatedMessage) Descriptor() ([]byte, []int) {
	return file_kurushimi_messages_proto_rawDescGZIP(), []int{4}
}

func (x *PendingMatchUpdatedMessage) GetPendingMatch() *matchmaker.PendingMatch {
	if x != nil {
		return x.PendingMatch
	}
	return nil
}

type PendingMatchDeletedMessage struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	PendingMatch  *matchmaker.PendingMatch          `protobuf:"bytes,1,opt,name=pending_match,json=pendingMatch,proto3" json:"pending_match,omitempty"`
	Reason        PendingMatchDeletedMessage_Reason `protobuf:"varint,2,opt,name=reason,proto3,enum=emortal.kurushimi.messages.PendingMatchDeletedMessage_Reason" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PendingMatchDeletedMessage) Reset() {
	*x = PendingMatchDeletedMessage{}
	mi := &file_kurushimi_messages_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PendingMatchDeletedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PendingMatchDeletedMessage) ProtoMessage() {}

func (x *PendingMatchDeletedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_kurushimi_messages_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PendingMatchDeletedMessage.ProtoReflect.Descriptor instead.
func (*PendingMatchDeletedMessage) Descriptor() ([]byte, []int) {
	return file_kurushimi_messages_proto_rawDescGZIP(), []int{5}
}

func (x *PendingMatchDeletedMessage) GetPendingMatch() *matchmaker.PendingMatch {
	if x != nil {
		return x.PendingMatch
	}
	return nil
}

func (x *PendingMatchDeletedMessage) GetReason() PendingMatchDeletedMessage_Reason {
	if x != nil {
		return x.Reason
	}
	return PendingMatchDeletedMessage_CANCELLED
}

type MatchCreatedMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Match         *matchmaker.Match      `protobuf:"bytes,1,opt,name=match,proto3" json:"match,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchCreatedMessage) Reset() {
	*x = MatchCreatedMessage{}
	mi := &file_kurushimi_messages_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchCreatedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchCreatedMessage) ProtoMessage() {}

func (x *MatchCreatedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_kurushimi_messages_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchCreatedMessage.ProtoReflect.Descriptor instead.
func (*MatchCreatedMessage) Descriptor() ([]byte, []int) {
	return file_kurushimi_messages_proto_rawDescGZIP(), []int{6}
}

func (x *MatchCreatedMessage) GetMatch() *matchmaker.Match {
	if x != nil {
		return x.Match
	}
	return nil
}

var File_kurushimi_messages_proto protoreflect.FileDescriptor

const file_kurushimi_messages_proto_rawDesc = "" +
	"\n" +
	"\x18kurushimi/messages.proto\x12\x1aemortal.kurushimi.messages\x1a\x16kurushimi/models.proto\"O\n" +
	"\x14TicketCreatedMessage\x127\n" +
	"\x06ticket\x18\x01 \x01(\v2\x1f.emortal.kurushimi.model.TicketR\x06ticket\"V\n" +
	"\x14TicketUpdatedMessage\x12>\n" +
	"\n" +
	"new_ticket\x18\x01 \x01(\v2\x1f.emortal.kurushimi.model.TicketR\tnewTicket\"\xe8\x01\n" +
	"\x14TicketDeletedMessage\x127\n" +
	"\x06ticket\x18\x01 \x01(\v2\x1f.emortal.kurushimi.model.TicketR\x06ticket\x12O\n" +
	"\x06reason\x18\x02 \x01(\x0e27.emortal.kurushimi.messages.TicketDeletedMessage.ReasonR\x06reason\"F\n" +
	"\x06Reason\x12\x15\n" +
	"\x11GAME_MODE_DELETED\x10\x00\x12\x12\n" +
	"\x0eMANUAL_DEQUEUE\x10\x01\x12\x11\n" +
	"\rMATCH_CREATED\x10\x02\"h\n" +
	"\x1aPendingMatchCreatedMessage\x12J\n" +
	"\rpending_match\x18\x01 \x01(\v2%.emortal.kurushimi.model.PendingMatchR\fpendingMatch\"h\n" +
	"\x1aPendingMatchUpdatedMessage\x12J\n" +
	"\rpending_match\x18\x01 \x01(\v2%.emortal.kurushimi.model.PendingMatchR\fpendingMatch\"\xeb\x01\n" +
	"\x1aPendingMatchDeletedMessage\x12J\n" +
	"\rpending_match\x18\x01 \x01(\v2%.emortal.kurushimi.model.PendingMatchR\fpendingMatch\x12U\n" +
	"\x06reason\x18\x02 \x01(\x0e2=.emortal.kurushimi.messages.PendingMatchDeletedMessage.ReasonR\x06reason\"*\n" +
	"\x06Reason\x12\r\n" +
	"\tCANCELLED\x10\x00\x12\x11\n" +
	"\rMATCH_CREATED\x10\x01\"K\n" +
	"\x13MatchCreatedMessage\x124\n" +
	"\x05match\x18\x01 \x01(\v2\x1e.emortal.kurushimi.model.MatchR\x05matchBb\n" +
	"\"dev.emortal.api.message.matchmakerP\x01Z:github.com/emortalmc/proto-specs/gen/go/message/matchmakerb\x06proto3"

var (
	file_kurushimi_messages_proto_rawDescOnce sync.Once
	file_kurushimi_messages_proto_rawDescData []byte
)

func file_kurushimi_messages_proto_rawDescGZIP() []byte {
	file_kurushimi_messages_proto_rawDescOnce.Do(func() {
		file_kurushimi_messages_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_kurushimi_messages_proto_rawDesc), len(file_kurushimi_messages_proto_rawDesc)))
	})
	return file_kurushimi_messages_proto_rawDescData
}

var file_kurushimi_messages_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_kurushimi_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_kurushimi_messages_proto_goTypes = []any{
	(TicketDeletedMessage_Reason)(0),       // 0: emortal.kurushimi.messages.TicketDeletedMessage.Reason
	(PendingMatchDeletedMessage_Reason)(0), // 1: emortal.kurushimi.messages.PendingMatchDeletedMessage.Reason
	(*TicketCreatedMessage)(nil),           // 2: emortal.kurushimi.messages.TicketCreatedMessage
	(*TicketUpdatedMessage)(nil),           // 3: emortal.kurushimi.messages.TicketUpdatedMessage
	(*TicketDeletedMessage)(nil),           // 4: emortal.kurushimi.messages.TicketDeletedMessage
	(*PendingMatchCreatedMessage)(nil),     // 5: emortal.kurushimi.messages.PendingMatchCreatedMessage
	(*PendingMatchUpdatedMessage)(nil),     // 6: emortal.kurushimi.messages.PendingMatchUpdatedMessage
	(*PendingMatchDeletedMessage)(nil),     // 7: emortal.kurushimi.messages.PendingMatchDeletedMessage
	(*MatchCreatedMessage)(nil),            // 8: emortal.kurushimi.messages.MatchCreatedMessage
	(*matchmaker.Ticket)(nil),              // 9: emortal.kurushimi.model.Ticket
	(*matchmaker.PendingMatch)(nil),        // 10: emortal.kurushimi.model.PendingMatch
	(*matchmaker.Match)(nil),               // 11: emortal.kurushimi.model.Match
}
var file_kurushimi_messages_proto_depIdxs = []int32{
	9,  // 0: emortal.kurushimi.messages.TicketCreatedMessage.ticket:type_name -> emortal.kurushimi.model.Ticket
	9,  // 1: emortal.kurushimi.messages.TicketUpdatedMessage.new_ticket:type_name -> emortal.kurushimi.model.Ticket
	9,  // 2: emortal.kurushimi.messages.TicketDeletedMessage.ticket:type_name -> emortal.kurushimi.model.Ticket
	0,  // 3: emortal.kurushimi.messages.TicketDeletedMessage.reason:type_name -> emortal.kurushimi.messages.TicketDeletedMessage.Reason
	10, // 4: emortal.kurushimi.messages.PendingMatchCreatedMessage.pending_match:type_name -> emortal.kurushimi.model.PendingMatch
	10, // 5: emortal.kurushimi.messages.PendingMatchUpdatedMessage.pending_match:type_name -> emortal.kurushimi.model.PendingMatch
	10, // 6: emortal.kurushimi.messages.PendingMatchDeletedMessage.pending_match:type_name -> emortal.kurushimi.model.PendingMatch
	1,  // 7: emortal.kurushimi.messages.PendingMatchDeletedMessage.reason:type_name -> emortal.kurushimi.messages.PendingMatchDeletedMessage.Reason
	11, // 8: emortal.kurushimi.messages.MatchCreatedMessage.match:type_name -> emortal.kurushimi.model.Match
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_kurushimi_messages_proto_init() }
func file_kurushimi_messages_proto_init() {
	if File_kurushimi_messages_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_kurushimi_messages_proto_rawDesc), len(file_kurushimi_messages_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kurushimi_messages_proto_goTypes,
		DependencyIndexes: file_kurushimi_messages_proto_depIdxs,
		EnumInfos:         file_kurushimi_messages_proto_enumTypes,
		MessageInfos:      file_kurushimi_messages_proto_msgTypes,
	}.Build()
	File_kurushimi_messages_proto = out.File
	file_kurushimi_messages_proto_goTypes = nil
	file_kurushimi_messages_proto_depIdxs = nil
}
