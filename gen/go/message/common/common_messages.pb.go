// common messages

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v6.31.1
// source: common_messages.proto

package common

import (
	common "github.com/emortalmc/proto-specs/gen/go/model/common"
	messagehandler "github.com/emortalmc/proto-specs/gen/go/model/messagehandler"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PlayerConnectMessage struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	PlayerId       string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	PlayerUsername string                 `protobuf:"bytes,2,opt,name=player_username,json=playerUsername,proto3" json:"player_username,omitempty"`
	PlayerSkin     *common.PlayerSkin     `protobuf:"bytes,4,opt,name=player_skin,json=playerSkin,proto3" json:"player_skin,omitempty"`
	ServerId       string                 `protobuf:"bytes,3,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PlayerConnectMessage) Reset() {
	*x = PlayerConnectMessage{}
	mi := &file_common_messages_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerConnectMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerConnectMessage) ProtoMessage() {}

func (x *PlayerConnectMessage) ProtoReflect() protoreflect.Message {
	mi := &file_common_messages_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerConnectMessage.ProtoReflect.Descriptor instead.
func (*PlayerConnectMessage) Descriptor() ([]byte, []int) {
	return file_common_messages_proto_rawDescGZIP(), []int{0}
}

func (x *PlayerConnectMessage) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *PlayerConnectMessage) GetPlayerUsername() string {
	if x != nil {
		return x.PlayerUsername
	}
	return ""
}

func (x *PlayerConnectMessage) GetPlayerSkin() *common.PlayerSkin {
	if x != nil {
		return x.PlayerSkin
	}
	return nil
}

func (x *PlayerConnectMessage) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

// PlayerSwitchServerMessage is sent when a player is confirmed to have switched servers.
// it is therefore only sent by the proxy the player is connected to.
type PlayerSwitchServerMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	ServerId      string                 `protobuf:"bytes,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerSwitchServerMessage) Reset() {
	*x = PlayerSwitchServerMessage{}
	mi := &file_common_messages_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerSwitchServerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerSwitchServerMessage) ProtoMessage() {}

func (x *PlayerSwitchServerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_common_messages_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerSwitchServerMessage.ProtoReflect.Descriptor instead.
func (*PlayerSwitchServerMessage) Descriptor() ([]byte, []int) {
	return file_common_messages_proto_rawDescGZIP(), []int{1}
}

func (x *PlayerSwitchServerMessage) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *PlayerSwitchServerMessage) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

type PlayerDisconnectMessage struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	PlayerId       string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	PlayerUsername string                 `protobuf:"bytes,2,opt,name=player_username,json=playerUsername,proto3" json:"player_username,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PlayerDisconnectMessage) Reset() {
	*x = PlayerDisconnectMessage{}
	mi := &file_common_messages_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerDisconnectMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerDisconnectMessage) ProtoMessage() {}

func (x *PlayerDisconnectMessage) ProtoReflect() protoreflect.Message {
	mi := &file_common_messages_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerDisconnectMessage.ProtoReflect.Descriptor instead.
func (*PlayerDisconnectMessage) Descriptor() ([]byte, []int) {
	return file_common_messages_proto_rawDescGZIP(), []int{2}
}

func (x *PlayerDisconnectMessage) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *PlayerDisconnectMessage) GetPlayerUsername() string {
	if x != nil {
		return x.PlayerUsername
	}
	return ""
}

// PlayerChatMessageMessage is sent when a player sends a chat message
// sent in the 'mc-messages' topic (Kafka)
type PlayerChatMessageMessage struct {
	state          protoimpl.MessageState      `protogen:"open.v1"`
	Message        *messagehandler.ChatMessage `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	SenderId       string                      `protobuf:"bytes,2,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	SenderUsername string                      `protobuf:"bytes,3,opt,name=sender_username,json=senderUsername,proto3" json:"sender_username,omitempty"`
	MessageContent string                      `protobuf:"bytes,4,opt,name=message_content,json=messageContent,proto3" json:"message_content,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PlayerChatMessageMessage) Reset() {
	*x = PlayerChatMessageMessage{}
	mi := &file_common_messages_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerChatMessageMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerChatMessageMessage) ProtoMessage() {}

func (x *PlayerChatMessageMessage) ProtoReflect() protoreflect.Message {
	mi := &file_common_messages_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerChatMessageMessage.ProtoReflect.Descriptor instead.
func (*PlayerChatMessageMessage) Descriptor() ([]byte, []int) {
	return file_common_messages_proto_rawDescGZIP(), []int{3}
}

func (x *PlayerChatMessageMessage) GetMessage() *messagehandler.ChatMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *PlayerChatMessageMessage) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *PlayerChatMessageMessage) GetSenderUsername() string {
	if x != nil {
		return x.SenderUsername
	}
	return ""
}

func (x *PlayerChatMessageMessage) GetMessageContent() string {
	if x != nil {
		return x.MessageContent
	}
	return ""
}

var File_common_messages_proto protoreflect.FileDescriptor

const file_common_messages_proto_rawDesc = "" +
	"\n" +
	"\x15common_messages.proto\x12\x0femortal.message\x1a\x1cmessage_handler/models.proto\x1a\x13common_models.proto\"\xb5\x01\n" +
	"\x14PlayerConnectMessage\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12'\n" +
	"\x0fplayer_username\x18\x02 \x01(\tR\x0eplayerUsername\x12:\n" +
	"\vplayer_skin\x18\x04 \x01(\v2\x19.emortal.model.PlayerSkinR\n" +
	"playerSkin\x12\x1b\n" +
	"\tserver_id\x18\x03 \x01(\tR\bserverId\"U\n" +
	"\x19PlayerSwitchServerMessage\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x1b\n" +
	"\tserver_id\x18\x02 \x01(\tR\bserverId\"_\n" +
	"\x17PlayerDisconnectMessage\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12'\n" +
	"\x0fplayer_username\x18\x02 \x01(\tR\x0eplayerUsername\"\xce\x01\n" +
	"\x18PlayerChatMessageMessage\x12C\n" +
	"\amessage\x18\x01 \x01(\v2).emortal.model.messagehandler.ChatMessageR\amessage\x12\x1b\n" +
	"\tsender_id\x18\x02 \x01(\tR\bsenderId\x12'\n" +
	"\x0fsender_username\x18\x03 \x01(\tR\x0esenderUsername\x12'\n" +
	"\x0fmessage_content\x18\x04 \x01(\tR\x0emessageContentBZ\n" +
	"\x1edev.emortal.api.message.commonP\x01Z6github.com/emortalmc/proto-specs/gen/go/message/commonb\x06proto3"

var (
	file_common_messages_proto_rawDescOnce sync.Once
	file_common_messages_proto_rawDescData []byte
)

func file_common_messages_proto_rawDescGZIP() []byte {
	file_common_messages_proto_rawDescOnce.Do(func() {
		file_common_messages_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_common_messages_proto_rawDesc), len(file_common_messages_proto_rawDesc)))
	})
	return file_common_messages_proto_rawDescData
}

var file_common_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_common_messages_proto_goTypes = []any{
	(*PlayerConnectMessage)(nil),       // 0: emortal.message.PlayerConnectMessage
	(*PlayerSwitchServerMessage)(nil),  // 1: emortal.message.PlayerSwitchServerMessage
	(*PlayerDisconnectMessage)(nil),    // 2: emortal.message.PlayerDisconnectMessage
	(*PlayerChatMessageMessage)(nil),   // 3: emortal.message.PlayerChatMessageMessage
	(*common.PlayerSkin)(nil),          // 4: emortal.model.PlayerSkin
	(*messagehandler.ChatMessage)(nil), // 5: emortal.model.messagehandler.ChatMessage
}
var file_common_messages_proto_depIdxs = []int32{
	4, // 0: emortal.message.PlayerConnectMessage.player_skin:type_name -> emortal.model.PlayerSkin
	5, // 1: emortal.message.PlayerChatMessageMessage.message:type_name -> emortal.model.messagehandler.ChatMessage
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_common_messages_proto_init() }
func file_common_messages_proto_init() {
	if File_common_messages_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_common_messages_proto_rawDesc), len(file_common_messages_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_messages_proto_goTypes,
		DependencyIndexes: file_common_messages_proto_depIdxs,
		MessageInfos:      file_common_messages_proto_msgTypes,
	}.Build()
	File_common_messages_proto = out.File
	file_common_messages_proto_goTypes = nil
	file_common_messages_proto_depIdxs = nil
}
