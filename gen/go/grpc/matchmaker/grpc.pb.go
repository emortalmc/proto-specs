// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v6.31.1
// source: kurushimi/grpc.proto

package matchmaker

import (
	matchmaker "github.com/emortalmc/proto-specs/gen/go/model/matchmaker"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueueByPlayerErrorResponse_ErrorReason int32

const (
	QueueByPlayerErrorResponse_ALREADY_IN_QUEUE   QueueByPlayerErrorResponse_ErrorReason = 0
	QueueByPlayerErrorResponse_INVALID_GAME_MODE  QueueByPlayerErrorResponse_ErrorReason = 1
	QueueByPlayerErrorResponse_GAME_MODE_DISABLED QueueByPlayerErrorResponse_ErrorReason = 2
	QueueByPlayerErrorResponse_INVALID_MAP        QueueByPlayerErrorResponse_ErrorReason = 3
	QueueByPlayerErrorResponse_PARTY_TOO_LARGE    QueueByPlayerErrorResponse_ErrorReason = 4
	// NO_PERMISSION is normally triggered if the player is not the party leader
	QueueByPlayerErrorResponse_NO_PERMISSION QueueByPlayerErrorResponse_ErrorReason = 6
)

// Enum value maps for QueueByPlayerErrorResponse_ErrorReason.
var (
	QueueByPlayerErrorResponse_ErrorReason_name = map[int32]string{
		0: "ALREADY_IN_QUEUE",
		1: "INVALID_GAME_MODE",
		2: "GAME_MODE_DISABLED",
		3: "INVALID_MAP",
		4: "PARTY_TOO_LARGE",
		6: "NO_PERMISSION",
	}
	QueueByPlayerErrorResponse_ErrorReason_value = map[string]int32{
		"ALREADY_IN_QUEUE":   0,
		"INVALID_GAME_MODE":  1,
		"GAME_MODE_DISABLED": 2,
		"INVALID_MAP":        3,
		"PARTY_TOO_LARGE":    4,
		"NO_PERMISSION":      6,
	}
)

func (x QueueByPlayerErrorResponse_ErrorReason) Enum() *QueueByPlayerErrorResponse_ErrorReason {
	p := new(QueueByPlayerErrorResponse_ErrorReason)
	*p = x
	return p
}

func (x QueueByPlayerErrorResponse_ErrorReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QueueByPlayerErrorResponse_ErrorReason) Descriptor() protoreflect.EnumDescriptor {
	return file_kurushimi_grpc_proto_enumTypes[0].Descriptor()
}

func (QueueByPlayerErrorResponse_ErrorReason) Type() protoreflect.EnumType {
	return &file_kurushimi_grpc_proto_enumTypes[0]
}

func (x QueueByPlayerErrorResponse_ErrorReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QueueByPlayerErrorResponse_ErrorReason.Descriptor instead.
func (QueueByPlayerErrorResponse_ErrorReason) EnumDescriptor() ([]byte, []int) {
	return file_kurushimi_grpc_proto_rawDescGZIP(), []int{2, 0}
}

type DequeueByPlayerErrorResponse_ErrorReason int32

const (
	DequeueByPlayerErrorResponse_NOT_IN_QUEUE               DequeueByPlayerErrorResponse_ErrorReason = 0
	DequeueByPlayerErrorResponse_NO_PERMISSION              DequeueByPlayerErrorResponse_ErrorReason = 1
	DequeueByPlayerErrorResponse_ALREADY_MARKED_FOR_DEQUEUE DequeueByPlayerErrorResponse_ErrorReason = 2
)

// Enum value maps for DequeueByPlayerErrorResponse_ErrorReason.
var (
	DequeueByPlayerErrorResponse_ErrorReason_name = map[int32]string{
		0: "NOT_IN_QUEUE",
		1: "NO_PERMISSION",
		2: "ALREADY_MARKED_FOR_DEQUEUE",
	}
	DequeueByPlayerErrorResponse_ErrorReason_value = map[string]int32{
		"NOT_IN_QUEUE":               0,
		"NO_PERMISSION":              1,
		"ALREADY_MARKED_FOR_DEQUEUE": 2,
	}
)

func (x DequeueByPlayerErrorResponse_ErrorReason) Enum() *DequeueByPlayerErrorResponse_ErrorReason {
	p := new(DequeueByPlayerErrorResponse_ErrorReason)
	*p = x
	return p
}

func (x DequeueByPlayerErrorResponse_ErrorReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DequeueByPlayerErrorResponse_ErrorReason) Descriptor() protoreflect.EnumDescriptor {
	return file_kurushimi_grpc_proto_enumTypes[1].Descriptor()
}

func (DequeueByPlayerErrorResponse_ErrorReason) Type() protoreflect.EnumType {
	return &file_kurushimi_grpc_proto_enumTypes[1]
}

func (x DequeueByPlayerErrorResponse_ErrorReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DequeueByPlayerErrorResponse_ErrorReason.Descriptor instead.
func (DequeueByPlayerErrorResponse_ErrorReason) EnumDescriptor() ([]byte, []int) {
	return file_kurushimi_grpc_proto_rawDescGZIP(), []int{9, 0}
}

type ChangePlayerMapVoteErrorResponse_ErrorReason int32

const (
	ChangePlayerMapVoteErrorResponse_INVALID_MAP  ChangePlayerMapVoteErrorResponse_ErrorReason = 0
	ChangePlayerMapVoteErrorResponse_NOT_IN_QUEUE ChangePlayerMapVoteErrorResponse_ErrorReason = 1
)

// Enum value maps for ChangePlayerMapVoteErrorResponse_ErrorReason.
var (
	ChangePlayerMapVoteErrorResponse_ErrorReason_name = map[int32]string{
		0: "INVALID_MAP",
		1: "NOT_IN_QUEUE",
	}
	ChangePlayerMapVoteErrorResponse_ErrorReason_value = map[string]int32{
		"INVALID_MAP":  0,
		"NOT_IN_QUEUE": 1,
	}
)

func (x ChangePlayerMapVoteErrorResponse_ErrorReason) Enum() *ChangePlayerMapVoteErrorResponse_ErrorReason {
	p := new(ChangePlayerMapVoteErrorResponse_ErrorReason)
	*p = x
	return p
}

func (x ChangePlayerMapVoteErrorResponse_ErrorReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChangePlayerMapVoteErrorResponse_ErrorReason) Descriptor() protoreflect.EnumDescriptor {
	return file_kurushimi_grpc_proto_enumTypes[2].Descriptor()
}

func (ChangePlayerMapVoteErrorResponse_ErrorReason) Type() protoreflect.EnumType {
	return &file_kurushimi_grpc_proto_enumTypes[2]
}

func (x ChangePlayerMapVoteErrorResponse_ErrorReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChangePlayerMapVoteErrorResponse_ErrorReason.Descriptor instead.
func (ChangePlayerMapVoteErrorResponse_ErrorReason) EnumDescriptor() ([]byte, []int) {
	return file_kurushimi_grpc_proto_rawDescGZIP(), []int{12, 0}
}

type QueueByPlayerRequest struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	GameModeId string                 `protobuf:"bytes,1,opt,name=game_mode_id,json=gameModeId,proto3" json:"game_mode_id,omitempty"`
	// player_id of type UUID
	PlayerId string `protobuf:"bytes,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	// private_game defaults to false. If true, gamemode will be created as an instant private game.
	PrivateGame *bool `protobuf:"varint,3,opt,name=private_game,json=privateGame,proto3,oneof" json:"private_game,omitempty"`
	// voting
	MapId *string `protobuf:"bytes,4,opt,name=map_id,json=mapId,proto3,oneof" json:"map_id,omitempty"`
	// auto_teleport if true or not specified, the proxy will listen for match messages and teleport the player to the match.
	// if false, the proxy will not auto-teleport the player and you should listen for match messages yourself.
	//
	// e.g. this is used by the proxy for lobby matchmaking as it is handled differently
	// to when the player is already connected to the server.
	AutoTeleport  *bool `protobuf:"varint,5,opt,name=auto_teleport,json=autoTeleport,proto3,oneof" json:"auto_teleport,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueueByPlayerRequest) Reset() {
	*x = QueueByPlayerRequest{}
	mi := &file_kurushimi_grpc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueueByPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueByPlayerRequest) ProtoMessage() {}

func (x *QueueByPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kurushimi_grpc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueByPlayerRequest.ProtoReflect.Descriptor instead.
func (*QueueByPlayerRequest) Descriptor() ([]byte, []int) {
	return file_kurushimi_grpc_proto_rawDescGZIP(), []int{0}
}

func (x *QueueByPlayerRequest) GetGameModeId() string {
	if x != nil {
		return x.GameModeId
	}
	return ""
}

func (x *QueueByPlayerRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *QueueByPlayerRequest) GetPrivateGame() bool {
	if x != nil && x.PrivateGame != nil {
		return *x.PrivateGame
	}
	return false
}

func (x *QueueByPlayerRequest) GetMapId() string {
	if x != nil && x.MapId != nil {
		return *x.MapId
	}
	return ""
}

func (x *QueueByPlayerRequest) GetAutoTeleport() bool {
	if x != nil && x.AutoTeleport != nil {
		return *x.AutoTeleport
	}
	return false
}

type QueueByPlayerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueueByPlayerResponse) Reset() {
	*x = QueueByPlayerResponse{}
	mi := &file_kurushimi_grpc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueueByPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueByPlayerResponse) ProtoMessage() {}

func (x *QueueByPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kurushimi_grpc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueByPlayerResponse.ProtoReflect.Descriptor instead.
func (*QueueByPlayerResponse) Descriptor() ([]byte, []int) {
	return file_kurushimi_grpc_proto_rawDescGZIP(), []int{1}
}

type QueueByPlayerErrorResponse struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Reason        QueueByPlayerErrorResponse_ErrorReason `protobuf:"varint,1,opt,name=reason,proto3,enum=emortal.kurushimi.grpc.QueueByPlayerErrorResponse_ErrorReason" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueueByPlayerErrorResponse) Reset() {
	*x = QueueByPlayerErrorResponse{}
	mi := &file_kurushimi_grpc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueueByPlayerErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueByPlayerErrorResponse) ProtoMessage() {}

func (x *QueueByPlayerErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kurushimi_grpc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueByPlayerErrorResponse.ProtoReflect.Descriptor instead.
func (*QueueByPlayerErrorResponse) Descriptor() ([]byte, []int) {
	return file_kurushimi_grpc_proto_rawDescGZIP(), []int{2}
}

func (x *QueueByPlayerErrorResponse) GetReason() QueueByPlayerErrorResponse_ErrorReason {
	if x != nil {
		return x.Reason
	}
	return QueueByPlayerErrorResponse_ALREADY_IN_QUEUE
}

type SendPlayerToLobbyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// player_ids of type (repeated) UUID
	PlayerIds []string `protobuf:"bytes,1,rep,name=player_ids,json=playerIds,proto3" json:"player_ids,omitempty"`
	// send_parties defaults to true. If false, only the players specified will be sent to the lobby.
	// If true, the party of each player will also be sent to the lobby.
	SendParties   *bool `protobuf:"varint,2,opt,name=send_parties,json=sendParties,proto3,oneof" json:"send_parties,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendPlayerToLobbyRequest) Reset() {
	*x = SendPlayerToLobbyRequest{}
	mi := &file_kurushimi_grpc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendPlayerToLobbyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPlayerToLobbyRequest) ProtoMessage() {}

func (x *SendPlayerToLobbyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kurushimi_grpc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPlayerToLobbyRequest.ProtoReflect.Descriptor instead.
func (*SendPlayerToLobbyRequest) Descriptor() ([]byte, []int) {
	return file_kurushimi_grpc_proto_rawDescGZIP(), []int{3}
}

func (x *SendPlayerToLobbyRequest) GetPlayerIds() []string {
	if x != nil {
		return x.PlayerIds
	}
	return nil
}

func (x *SendPlayerToLobbyRequest) GetSendParties() bool {
	if x != nil && x.SendParties != nil {
		return *x.SendParties
	}
	return false
}

type SendPlayerToLobbyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendPlayerToLobbyResponse) Reset() {
	*x = SendPlayerToLobbyResponse{}
	mi := &file_kurushimi_grpc_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendPlayerToLobbyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPlayerToLobbyResponse) ProtoMessage() {}

func (x *SendPlayerToLobbyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kurushimi_grpc_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPlayerToLobbyResponse.ProtoReflect.Descriptor instead.
func (*SendPlayerToLobbyResponse) Descriptor() ([]byte, []int) {
	return file_kurushimi_grpc_proto_rawDescGZIP(), []int{4}
}

type LoginQueueByPlayerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// player_id of type UUID
	PlayerId      string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	IsProxy       bool   `protobuf:"varint,2,opt,name=is_proxy,json=isProxy,proto3" json:"is_proxy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginQueueByPlayerRequest) Reset() {
	*x = LoginQueueByPlayerRequest{}
	mi := &file_kurushimi_grpc_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginQueueByPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginQueueByPlayerRequest) ProtoMessage() {}

func (x *LoginQueueByPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kurushimi_grpc_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginQueueByPlayerRequest.ProtoReflect.Descriptor instead.
func (*LoginQueueByPlayerRequest) Descriptor() ([]byte, []int) {
	return file_kurushimi_grpc_proto_rawDescGZIP(), []int{5}
}

func (x *LoginQueueByPlayerRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *LoginQueueByPlayerRequest) GetIsProxy() bool {
	if x != nil {
		return x.IsProxy
	}
	return false
}

type LoginQueueByPlayerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginQueueByPlayerResponse) Reset() {
	*x = LoginQueueByPlayerResponse{}
	mi := &file_kurushimi_grpc_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginQueueByPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginQueueByPlayerResponse) ProtoMessage() {}

func (x *LoginQueueByPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kurushimi_grpc_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginQueueByPlayerResponse.ProtoReflect.Descriptor instead.
func (*LoginQueueByPlayerResponse) Descriptor() ([]byte, []int) {
	return file_kurushimi_grpc_proto_rawDescGZIP(), []int{6}
}

type DequeueByPlayerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// player_id of type UUID
	PlayerId      string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DequeueByPlayerRequest) Reset() {
	*x = DequeueByPlayerRequest{}
	mi := &file_kurushimi_grpc_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DequeueByPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DequeueByPlayerRequest) ProtoMessage() {}

func (x *DequeueByPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kurushimi_grpc_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DequeueByPlayerRequest.ProtoReflect.Descriptor instead.
func (*DequeueByPlayerRequest) Descriptor() ([]byte, []int) {
	return file_kurushimi_grpc_proto_rawDescGZIP(), []int{7}
}

func (x *DequeueByPlayerRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

type DequeueByPlayerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DequeueByPlayerResponse) Reset() {
	*x = DequeueByPlayerResponse{}
	mi := &file_kurushimi_grpc_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DequeueByPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DequeueByPlayerResponse) ProtoMessage() {}

func (x *DequeueByPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kurushimi_grpc_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DequeueByPlayerResponse.ProtoReflect.Descriptor instead.
func (*DequeueByPlayerResponse) Descriptor() ([]byte, []int) {
	return file_kurushimi_grpc_proto_rawDescGZIP(), []int{8}
}

type DequeueByPlayerErrorResponse struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	Reason        DequeueByPlayerErrorResponse_ErrorReason `protobuf:"varint,1,opt,name=reason,proto3,enum=emortal.kurushimi.grpc.DequeueByPlayerErrorResponse_ErrorReason" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DequeueByPlayerErrorResponse) Reset() {
	*x = DequeueByPlayerErrorResponse{}
	mi := &file_kurushimi_grpc_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DequeueByPlayerErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DequeueByPlayerErrorResponse) ProtoMessage() {}

func (x *DequeueByPlayerErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kurushimi_grpc_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DequeueByPlayerErrorResponse.ProtoReflect.Descriptor instead.
func (*DequeueByPlayerErrorResponse) Descriptor() ([]byte, []int) {
	return file_kurushimi_grpc_proto_rawDescGZIP(), []int{9}
}

func (x *DequeueByPlayerErrorResponse) GetReason() DequeueByPlayerErrorResponse_ErrorReason {
	if x != nil {
		return x.Reason
	}
	return DequeueByPlayerErrorResponse_NOT_IN_QUEUE
}

type ChangePlayerMapVoteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	MapId         string                 `protobuf:"bytes,2,opt,name=map_id,json=mapId,proto3" json:"map_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangePlayerMapVoteRequest) Reset() {
	*x = ChangePlayerMapVoteRequest{}
	mi := &file_kurushimi_grpc_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangePlayerMapVoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePlayerMapVoteRequest) ProtoMessage() {}

func (x *ChangePlayerMapVoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kurushimi_grpc_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePlayerMapVoteRequest.ProtoReflect.Descriptor instead.
func (*ChangePlayerMapVoteRequest) Descriptor() ([]byte, []int) {
	return file_kurushimi_grpc_proto_rawDescGZIP(), []int{10}
}

func (x *ChangePlayerMapVoteRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *ChangePlayerMapVoteRequest) GetMapId() string {
	if x != nil {
		return x.MapId
	}
	return ""
}

type ChangePlayerMapVoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangePlayerMapVoteResponse) Reset() {
	*x = ChangePlayerMapVoteResponse{}
	mi := &file_kurushimi_grpc_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangePlayerMapVoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePlayerMapVoteResponse) ProtoMessage() {}

func (x *ChangePlayerMapVoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kurushimi_grpc_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePlayerMapVoteResponse.ProtoReflect.Descriptor instead.
func (*ChangePlayerMapVoteResponse) Descriptor() ([]byte, []int) {
	return file_kurushimi_grpc_proto_rawDescGZIP(), []int{11}
}

type ChangePlayerMapVoteErrorResponse struct {
	state         protoimpl.MessageState                       `protogen:"open.v1"`
	Reason        ChangePlayerMapVoteErrorResponse_ErrorReason `protobuf:"varint,1,opt,name=reason,proto3,enum=emortal.kurushimi.grpc.ChangePlayerMapVoteErrorResponse_ErrorReason" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangePlayerMapVoteErrorResponse) Reset() {
	*x = ChangePlayerMapVoteErrorResponse{}
	mi := &file_kurushimi_grpc_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangePlayerMapVoteErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePlayerMapVoteErrorResponse) ProtoMessage() {}

func (x *ChangePlayerMapVoteErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kurushimi_grpc_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePlayerMapVoteErrorResponse.ProtoReflect.Descriptor instead.
func (*ChangePlayerMapVoteErrorResponse) Descriptor() ([]byte, []int) {
	return file_kurushimi_grpc_proto_rawDescGZIP(), []int{12}
}

func (x *ChangePlayerMapVoteErrorResponse) GetReason() ChangePlayerMapVoteErrorResponse_ErrorReason {
	if x != nil {
		return x.Reason
	}
	return ChangePlayerMapVoteErrorResponse_INVALID_MAP
}

type GetPlayerQueueInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlayerQueueInfoRequest) Reset() {
	*x = GetPlayerQueueInfoRequest{}
	mi := &file_kurushimi_grpc_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlayerQueueInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerQueueInfoRequest) ProtoMessage() {}

func (x *GetPlayerQueueInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kurushimi_grpc_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerQueueInfoRequest.ProtoReflect.Descriptor instead.
func (*GetPlayerQueueInfoRequest) Descriptor() ([]byte, []int) {
	return file_kurushimi_grpc_proto_rawDescGZIP(), []int{13}
}

func (x *GetPlayerQueueInfoRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

type GetPlayerQueueInfoResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Ticket        *matchmaker.Ticket       `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	QueuedPlayer  *matchmaker.QueuedPlayer `protobuf:"bytes,2,opt,name=queued_player,json=queuedPlayer,proto3" json:"queued_player,omitempty"`
	PendingMatch  *matchmaker.PendingMatch `protobuf:"bytes,3,opt,name=pending_match,json=pendingMatch,proto3,oneof" json:"pending_match,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlayerQueueInfoResponse) Reset() {
	*x = GetPlayerQueueInfoResponse{}
	mi := &file_kurushimi_grpc_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlayerQueueInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerQueueInfoResponse) ProtoMessage() {}

func (x *GetPlayerQueueInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kurushimi_grpc_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerQueueInfoResponse.ProtoReflect.Descriptor instead.
func (*GetPlayerQueueInfoResponse) Descriptor() ([]byte, []int) {
	return file_kurushimi_grpc_proto_rawDescGZIP(), []int{14}
}

func (x *GetPlayerQueueInfoResponse) GetTicket() *matchmaker.Ticket {
	if x != nil {
		return x.Ticket
	}
	return nil
}

func (x *GetPlayerQueueInfoResponse) GetQueuedPlayer() *matchmaker.QueuedPlayer {
	if x != nil {
		return x.QueuedPlayer
	}
	return nil
}

func (x *GetPlayerQueueInfoResponse) GetPendingMatch() *matchmaker.PendingMatch {
	if x != nil {
		return x.PendingMatch
	}
	return nil
}

var File_kurushimi_grpc_proto protoreflect.FileDescriptor

const file_kurushimi_grpc_proto_rawDesc = "" +
	"\n" +
	"\x14kurushimi/grpc.proto\x12\x16emortal.kurushimi.grpc\x1a\x16kurushimi/models.proto\"\xf1\x01\n" +
	"\x14QueueByPlayerRequest\x12 \n" +
	"\fgame_mode_id\x18\x01 \x01(\tR\n" +
	"gameModeId\x12\x1b\n" +
	"\tplayer_id\x18\x02 \x01(\tR\bplayerId\x12&\n" +
	"\fprivate_game\x18\x03 \x01(\bH\x00R\vprivateGame\x88\x01\x01\x12\x1a\n" +
	"\x06map_id\x18\x04 \x01(\tH\x01R\x05mapId\x88\x01\x01\x12(\n" +
	"\rauto_teleport\x18\x05 \x01(\bH\x02R\fautoTeleport\x88\x01\x01B\x0f\n" +
	"\r_private_gameB\t\n" +
	"\a_map_idB\x10\n" +
	"\x0e_auto_teleport\"\x17\n" +
	"\x15QueueByPlayerResponse\"\x82\x02\n" +
	"\x1aQueueByPlayerErrorResponse\x12V\n" +
	"\x06reason\x18\x01 \x01(\x0e2>.emortal.kurushimi.grpc.QueueByPlayerErrorResponse.ErrorReasonR\x06reason\"\x8b\x01\n" +
	"\vErrorReason\x12\x14\n" +
	"\x10ALREADY_IN_QUEUE\x10\x00\x12\x15\n" +
	"\x11INVALID_GAME_MODE\x10\x01\x12\x16\n" +
	"\x12GAME_MODE_DISABLED\x10\x02\x12\x0f\n" +
	"\vINVALID_MAP\x10\x03\x12\x13\n" +
	"\x0fPARTY_TOO_LARGE\x10\x04\x12\x11\n" +
	"\rNO_PERMISSION\x10\x06\"r\n" +
	"\x18SendPlayerToLobbyRequest\x12\x1d\n" +
	"\n" +
	"player_ids\x18\x01 \x03(\tR\tplayerIds\x12&\n" +
	"\fsend_parties\x18\x02 \x01(\bH\x00R\vsendParties\x88\x01\x01B\x0f\n" +
	"\r_send_parties\"\x1b\n" +
	"\x19SendPlayerToLobbyResponse\"S\n" +
	"\x19LoginQueueByPlayerRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x19\n" +
	"\bis_proxy\x18\x02 \x01(\bR\aisProxy\"\x1c\n" +
	"\x1aLoginQueueByPlayerResponse\"5\n" +
	"\x16DequeueByPlayerRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\"\x19\n" +
	"\x17DequeueByPlayerResponse\"\xcc\x01\n" +
	"\x1cDequeueByPlayerErrorResponse\x12X\n" +
	"\x06reason\x18\x01 \x01(\x0e2@.emortal.kurushimi.grpc.DequeueByPlayerErrorResponse.ErrorReasonR\x06reason\"R\n" +
	"\vErrorReason\x12\x10\n" +
	"\fNOT_IN_QUEUE\x10\x00\x12\x11\n" +
	"\rNO_PERMISSION\x10\x01\x12\x1e\n" +
	"\x1aALREADY_MARKED_FOR_DEQUEUE\x10\x02\"P\n" +
	"\x1aChangePlayerMapVoteRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x15\n" +
	"\x06map_id\x18\x02 \x01(\tR\x05mapId\"\x1d\n" +
	"\x1bChangePlayerMapVoteResponse\"\xb2\x01\n" +
	" ChangePlayerMapVoteErrorResponse\x12\\\n" +
	"\x06reason\x18\x01 \x01(\x0e2D.emortal.kurushimi.grpc.ChangePlayerMapVoteErrorResponse.ErrorReasonR\x06reason\"0\n" +
	"\vErrorReason\x12\x0f\n" +
	"\vINVALID_MAP\x10\x00\x12\x10\n" +
	"\fNOT_IN_QUEUE\x10\x01\"8\n" +
	"\x19GetPlayerQueueInfoRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\"\x84\x02\n" +
	"\x1aGetPlayerQueueInfoResponse\x127\n" +
	"\x06ticket\x18\x01 \x01(\v2\x1f.emortal.kurushimi.model.TicketR\x06ticket\x12J\n" +
	"\rqueued_player\x18\x02 \x01(\v2%.emortal.kurushimi.model.QueuedPlayerR\fqueuedPlayer\x12O\n" +
	"\rpending_match\x18\x03 \x01(\v2%.emortal.kurushimi.model.PendingMatchH\x00R\fpendingMatch\x88\x01\x01B\x10\n" +
	"\x0e_pending_match2\xf0\x05\n" +
	"\n" +
	"Matchmaker\x12n\n" +
	"\rQueueByPlayer\x12,.emortal.kurushimi.grpc.QueueByPlayerRequest\x1a-.emortal.kurushimi.grpc.QueueByPlayerResponse\"\x00\x12{\n" +
	"\x12SendPlayersToLobby\x120.emortal.kurushimi.grpc.SendPlayerToLobbyRequest\x1a1.emortal.kurushimi.grpc.SendPlayerToLobbyResponse\"\x00\x12}\n" +
	"\x12LoginQueueByPlayer\x121.emortal.kurushimi.grpc.LoginQueueByPlayerRequest\x1a2.emortal.kurushimi.grpc.LoginQueueByPlayerResponse\"\x00\x12t\n" +
	"\x0fDequeueByPlayer\x12..emortal.kurushimi.grpc.DequeueByPlayerRequest\x1a/.emortal.kurushimi.grpc.DequeueByPlayerResponse\"\x00\x12\x80\x01\n" +
	"\x13ChangePlayerMapVote\x122.emortal.kurushimi.grpc.ChangePlayerMapVoteRequest\x1a3.emortal.kurushimi.grpc.ChangePlayerMapVoteResponse\"\x00\x12}\n" +
	"\x12GetPlayerQueueInfo\x121.emortal.kurushimi.grpc.GetPlayerQueueInfoRequest\x1a2.emortal.kurushimi.grpc.GetPlayerQueueInfoResponse\"\x00Bk\n" +
	"\x1fdev.emortal.api.grpc.matchmakerB\x0fMatchmakerProtoZ7github.com/emortalmc/proto-specs/gen/go/grpc/matchmakerb\x06proto3"

var (
	file_kurushimi_grpc_proto_rawDescOnce sync.Once
	file_kurushimi_grpc_proto_rawDescData []byte
)

func file_kurushimi_grpc_proto_rawDescGZIP() []byte {
	file_kurushimi_grpc_proto_rawDescOnce.Do(func() {
		file_kurushimi_grpc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_kurushimi_grpc_proto_rawDesc), len(file_kurushimi_grpc_proto_rawDesc)))
	})
	return file_kurushimi_grpc_proto_rawDescData
}

var file_kurushimi_grpc_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_kurushimi_grpc_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_kurushimi_grpc_proto_goTypes = []any{
	(QueueByPlayerErrorResponse_ErrorReason)(0),       // 0: emortal.kurushimi.grpc.QueueByPlayerErrorResponse.ErrorReason
	(DequeueByPlayerErrorResponse_ErrorReason)(0),     // 1: emortal.kurushimi.grpc.DequeueByPlayerErrorResponse.ErrorReason
	(ChangePlayerMapVoteErrorResponse_ErrorReason)(0), // 2: emortal.kurushimi.grpc.ChangePlayerMapVoteErrorResponse.ErrorReason
	(*QueueByPlayerRequest)(nil),                      // 3: emortal.kurushimi.grpc.QueueByPlayerRequest
	(*QueueByPlayerResponse)(nil),                     // 4: emortal.kurushimi.grpc.QueueByPlayerResponse
	(*QueueByPlayerErrorResponse)(nil),                // 5: emortal.kurushimi.grpc.QueueByPlayerErrorResponse
	(*SendPlayerToLobbyRequest)(nil),                  // 6: emortal.kurushimi.grpc.SendPlayerToLobbyRequest
	(*SendPlayerToLobbyResponse)(nil),                 // 7: emortal.kurushimi.grpc.SendPlayerToLobbyResponse
	(*LoginQueueByPlayerRequest)(nil),                 // 8: emortal.kurushimi.grpc.LoginQueueByPlayerRequest
	(*LoginQueueByPlayerResponse)(nil),                // 9: emortal.kurushimi.grpc.LoginQueueByPlayerResponse
	(*DequeueByPlayerRequest)(nil),                    // 10: emortal.kurushimi.grpc.DequeueByPlayerRequest
	(*DequeueByPlayerResponse)(nil),                   // 11: emortal.kurushimi.grpc.DequeueByPlayerResponse
	(*DequeueByPlayerErrorResponse)(nil),              // 12: emortal.kurushimi.grpc.DequeueByPlayerErrorResponse
	(*ChangePlayerMapVoteRequest)(nil),                // 13: emortal.kurushimi.grpc.ChangePlayerMapVoteRequest
	(*ChangePlayerMapVoteResponse)(nil),               // 14: emortal.kurushimi.grpc.ChangePlayerMapVoteResponse
	(*ChangePlayerMapVoteErrorResponse)(nil),          // 15: emortal.kurushimi.grpc.ChangePlayerMapVoteErrorResponse
	(*GetPlayerQueueInfoRequest)(nil),                 // 16: emortal.kurushimi.grpc.GetPlayerQueueInfoRequest
	(*GetPlayerQueueInfoResponse)(nil),                // 17: emortal.kurushimi.grpc.GetPlayerQueueInfoResponse
	(*matchmaker.Ticket)(nil),                         // 18: emortal.kurushimi.model.Ticket
	(*matchmaker.QueuedPlayer)(nil),                   // 19: emortal.kurushimi.model.QueuedPlayer
	(*matchmaker.PendingMatch)(nil),                   // 20: emortal.kurushimi.model.PendingMatch
}
var file_kurushimi_grpc_proto_depIdxs = []int32{
	0,  // 0: emortal.kurushimi.grpc.QueueByPlayerErrorResponse.reason:type_name -> emortal.kurushimi.grpc.QueueByPlayerErrorResponse.ErrorReason
	1,  // 1: emortal.kurushimi.grpc.DequeueByPlayerErrorResponse.reason:type_name -> emortal.kurushimi.grpc.DequeueByPlayerErrorResponse.ErrorReason
	2,  // 2: emortal.kurushimi.grpc.ChangePlayerMapVoteErrorResponse.reason:type_name -> emortal.kurushimi.grpc.ChangePlayerMapVoteErrorResponse.ErrorReason
	18, // 3: emortal.kurushimi.grpc.GetPlayerQueueInfoResponse.ticket:type_name -> emortal.kurushimi.model.Ticket
	19, // 4: emortal.kurushimi.grpc.GetPlayerQueueInfoResponse.queued_player:type_name -> emortal.kurushimi.model.QueuedPlayer
	20, // 5: emortal.kurushimi.grpc.GetPlayerQueueInfoResponse.pending_match:type_name -> emortal.kurushimi.model.PendingMatch
	3,  // 6: emortal.kurushimi.grpc.Matchmaker.QueueByPlayer:input_type -> emortal.kurushimi.grpc.QueueByPlayerRequest
	6,  // 7: emortal.kurushimi.grpc.Matchmaker.SendPlayersToLobby:input_type -> emortal.kurushimi.grpc.SendPlayerToLobbyRequest
	8,  // 8: emortal.kurushimi.grpc.Matchmaker.LoginQueueByPlayer:input_type -> emortal.kurushimi.grpc.LoginQueueByPlayerRequest
	10, // 9: emortal.kurushimi.grpc.Matchmaker.DequeueByPlayer:input_type -> emortal.kurushimi.grpc.DequeueByPlayerRequest
	13, // 10: emortal.kurushimi.grpc.Matchmaker.ChangePlayerMapVote:input_type -> emortal.kurushimi.grpc.ChangePlayerMapVoteRequest
	16, // 11: emortal.kurushimi.grpc.Matchmaker.GetPlayerQueueInfo:input_type -> emortal.kurushimi.grpc.GetPlayerQueueInfoRequest
	4,  // 12: emortal.kurushimi.grpc.Matchmaker.QueueByPlayer:output_type -> emortal.kurushimi.grpc.QueueByPlayerResponse
	7,  // 13: emortal.kurushimi.grpc.Matchmaker.SendPlayersToLobby:output_type -> emortal.kurushimi.grpc.SendPlayerToLobbyResponse
	9,  // 14: emortal.kurushimi.grpc.Matchmaker.LoginQueueByPlayer:output_type -> emortal.kurushimi.grpc.LoginQueueByPlayerResponse
	11, // 15: emortal.kurushimi.grpc.Matchmaker.DequeueByPlayer:output_type -> emortal.kurushimi.grpc.DequeueByPlayerResponse
	14, // 16: emortal.kurushimi.grpc.Matchmaker.ChangePlayerMapVote:output_type -> emortal.kurushimi.grpc.ChangePlayerMapVoteResponse
	17, // 17: emortal.kurushimi.grpc.Matchmaker.GetPlayerQueueInfo:output_type -> emortal.kurushimi.grpc.GetPlayerQueueInfoResponse
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_kurushimi_grpc_proto_init() }
func file_kurushimi_grpc_proto_init() {
	if File_kurushimi_grpc_proto != nil {
		return
	}
	file_kurushimi_grpc_proto_msgTypes[0].OneofWrappers = []any{}
	file_kurushimi_grpc_proto_msgTypes[3].OneofWrappers = []any{}
	file_kurushimi_grpc_proto_msgTypes[14].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_kurushimi_grpc_proto_rawDesc), len(file_kurushimi_grpc_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kurushimi_grpc_proto_goTypes,
		DependencyIndexes: file_kurushimi_grpc_proto_depIdxs,
		EnumInfos:         file_kurushimi_grpc_proto_enumTypes,
		MessageInfos:      file_kurushimi_grpc_proto_msgTypes,
	}.Build()
	File_kurushimi_grpc_proto = out.File
	file_kurushimi_grpc_proto_goTypes = nil
	file_kurushimi_grpc_proto_depIdxs = nil
}
