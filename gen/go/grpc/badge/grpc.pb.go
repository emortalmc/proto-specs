// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v6.31.1
// source: badges/grpc.proto

package badge

import (
	badge "github.com/emortalmc/proto-specs/gen/go/model/badge"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SetActivePlayerBadgeErrorResponse_Reason int32

const (
	SetActivePlayerBadgeErrorResponse_PLAYER_DOESNT_HAVE_BADGE SetActivePlayerBadgeErrorResponse_Reason = 0
)

// Enum value maps for SetActivePlayerBadgeErrorResponse_Reason.
var (
	SetActivePlayerBadgeErrorResponse_Reason_name = map[int32]string{
		0: "PLAYER_DOESNT_HAVE_BADGE",
	}
	SetActivePlayerBadgeErrorResponse_Reason_value = map[string]int32{
		"PLAYER_DOESNT_HAVE_BADGE": 0,
	}
)

func (x SetActivePlayerBadgeErrorResponse_Reason) Enum() *SetActivePlayerBadgeErrorResponse_Reason {
	p := new(SetActivePlayerBadgeErrorResponse_Reason)
	*p = x
	return p
}

func (x SetActivePlayerBadgeErrorResponse_Reason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetActivePlayerBadgeErrorResponse_Reason) Descriptor() protoreflect.EnumDescriptor {
	return file_badges_grpc_proto_enumTypes[0].Descriptor()
}

func (SetActivePlayerBadgeErrorResponse_Reason) Type() protoreflect.EnumType {
	return &file_badges_grpc_proto_enumTypes[0]
}

func (x SetActivePlayerBadgeErrorResponse_Reason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SetActivePlayerBadgeErrorResponse_Reason.Descriptor instead.
func (SetActivePlayerBadgeErrorResponse_Reason) EnumDescriptor() ([]byte, []int) {
	return file_badges_grpc_proto_rawDescGZIP(), []int{4, 0}
}

type AddBadgeToPlayerErrorResponse_Reason int32

const (
	AddBadgeToPlayerErrorResponse_PLAYER_ALREADY_HAS_BADGE AddBadgeToPlayerErrorResponse_Reason = 0
)

// Enum value maps for AddBadgeToPlayerErrorResponse_Reason.
var (
	AddBadgeToPlayerErrorResponse_Reason_name = map[int32]string{
		0: "PLAYER_ALREADY_HAS_BADGE",
	}
	AddBadgeToPlayerErrorResponse_Reason_value = map[string]int32{
		"PLAYER_ALREADY_HAS_BADGE": 0,
	}
)

func (x AddBadgeToPlayerErrorResponse_Reason) Enum() *AddBadgeToPlayerErrorResponse_Reason {
	p := new(AddBadgeToPlayerErrorResponse_Reason)
	*p = x
	return p
}

func (x AddBadgeToPlayerErrorResponse_Reason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AddBadgeToPlayerErrorResponse_Reason) Descriptor() protoreflect.EnumDescriptor {
	return file_badges_grpc_proto_enumTypes[1].Descriptor()
}

func (AddBadgeToPlayerErrorResponse_Reason) Type() protoreflect.EnumType {
	return &file_badges_grpc_proto_enumTypes[1]
}

func (x AddBadgeToPlayerErrorResponse_Reason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AddBadgeToPlayerErrorResponse_Reason.Descriptor instead.
func (AddBadgeToPlayerErrorResponse_Reason) EnumDescriptor() ([]byte, []int) {
	return file_badges_grpc_proto_rawDescGZIP(), []int{9, 0}
}

type RemoveBadgeFromPlayerErrorResponse_Reason int32

const (
	RemoveBadgeFromPlayerErrorResponse_PLAYER_DOESNT_HAVE_BADGE RemoveBadgeFromPlayerErrorResponse_Reason = 0
)

// Enum value maps for RemoveBadgeFromPlayerErrorResponse_Reason.
var (
	RemoveBadgeFromPlayerErrorResponse_Reason_name = map[int32]string{
		0: "PLAYER_DOESNT_HAVE_BADGE",
	}
	RemoveBadgeFromPlayerErrorResponse_Reason_value = map[string]int32{
		"PLAYER_DOESNT_HAVE_BADGE": 0,
	}
)

func (x RemoveBadgeFromPlayerErrorResponse_Reason) Enum() *RemoveBadgeFromPlayerErrorResponse_Reason {
	p := new(RemoveBadgeFromPlayerErrorResponse_Reason)
	*p = x
	return p
}

func (x RemoveBadgeFromPlayerErrorResponse_Reason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RemoveBadgeFromPlayerErrorResponse_Reason) Descriptor() protoreflect.EnumDescriptor {
	return file_badges_grpc_proto_enumTypes[2].Descriptor()
}

func (RemoveBadgeFromPlayerErrorResponse_Reason) Type() protoreflect.EnumType {
	return &file_badges_grpc_proto_enumTypes[2]
}

func (x RemoveBadgeFromPlayerErrorResponse_Reason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RemoveBadgeFromPlayerErrorResponse_Reason.Descriptor instead.
func (RemoveBadgeFromPlayerErrorResponse_Reason) EnumDescriptor() ([]byte, []int) {
	return file_badges_grpc_proto_rawDescGZIP(), []int{12, 0}
}

type GetPlayerBadgesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// player_id of type UUID
	PlayerId      string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlayerBadgesRequest) Reset() {
	*x = GetPlayerBadgesRequest{}
	mi := &file_badges_grpc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlayerBadgesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerBadgesRequest) ProtoMessage() {}

func (x *GetPlayerBadgesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_badges_grpc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerBadgesRequest.ProtoReflect.Descriptor instead.
func (*GetPlayerBadgesRequest) Descriptor() ([]byte, []int) {
	return file_badges_grpc_proto_rawDescGZIP(), []int{0}
}

func (x *GetPlayerBadgesRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

type GetPlayerBadgesResponse struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Badges []*badge.Badge         `protobuf:"bytes,1,rep,name=badges,proto3" json:"badges,omitempty"`
	// active_badge_id only exists if the player has an active badge
	ActiveBadgeId *string `protobuf:"bytes,2,opt,name=active_badge_id,json=activeBadgeId,proto3,oneof" json:"active_badge_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlayerBadgesResponse) Reset() {
	*x = GetPlayerBadgesResponse{}
	mi := &file_badges_grpc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlayerBadgesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerBadgesResponse) ProtoMessage() {}

func (x *GetPlayerBadgesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_badges_grpc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerBadgesResponse.ProtoReflect.Descriptor instead.
func (*GetPlayerBadgesResponse) Descriptor() ([]byte, []int) {
	return file_badges_grpc_proto_rawDescGZIP(), []int{1}
}

func (x *GetPlayerBadgesResponse) GetBadges() []*badge.Badge {
	if x != nil {
		return x.Badges
	}
	return nil
}

func (x *GetPlayerBadgesResponse) GetActiveBadgeId() string {
	if x != nil && x.ActiveBadgeId != nil {
		return *x.ActiveBadgeId
	}
	return ""
}

type SetActivePlayerBadgeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// player_id of type UUID
	PlayerId      string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	BadgeId       string `protobuf:"bytes,2,opt,name=badge_id,json=badgeId,proto3" json:"badge_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetActivePlayerBadgeRequest) Reset() {
	*x = SetActivePlayerBadgeRequest{}
	mi := &file_badges_grpc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetActivePlayerBadgeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetActivePlayerBadgeRequest) ProtoMessage() {}

func (x *SetActivePlayerBadgeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_badges_grpc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetActivePlayerBadgeRequest.ProtoReflect.Descriptor instead.
func (*SetActivePlayerBadgeRequest) Descriptor() ([]byte, []int) {
	return file_badges_grpc_proto_rawDescGZIP(), []int{2}
}

func (x *SetActivePlayerBadgeRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *SetActivePlayerBadgeRequest) GetBadgeId() string {
	if x != nil {
		return x.BadgeId
	}
	return ""
}

type SetActivePlayerBadgeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetActivePlayerBadgeResponse) Reset() {
	*x = SetActivePlayerBadgeResponse{}
	mi := &file_badges_grpc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetActivePlayerBadgeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetActivePlayerBadgeResponse) ProtoMessage() {}

func (x *SetActivePlayerBadgeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_badges_grpc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetActivePlayerBadgeResponse.ProtoReflect.Descriptor instead.
func (*SetActivePlayerBadgeResponse) Descriptor() ([]byte, []int) {
	return file_badges_grpc_proto_rawDescGZIP(), []int{3}
}

type SetActivePlayerBadgeErrorResponse struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	Reason        SetActivePlayerBadgeErrorResponse_Reason `protobuf:"varint,1,opt,name=reason,proto3,enum=emortal.grpc.badge.SetActivePlayerBadgeErrorResponse_Reason" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetActivePlayerBadgeErrorResponse) Reset() {
	*x = SetActivePlayerBadgeErrorResponse{}
	mi := &file_badges_grpc_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetActivePlayerBadgeErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetActivePlayerBadgeErrorResponse) ProtoMessage() {}

func (x *SetActivePlayerBadgeErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_badges_grpc_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetActivePlayerBadgeErrorResponse.ProtoReflect.Descriptor instead.
func (*SetActivePlayerBadgeErrorResponse) Descriptor() ([]byte, []int) {
	return file_badges_grpc_proto_rawDescGZIP(), []int{4}
}

func (x *SetActivePlayerBadgeErrorResponse) GetReason() SetActivePlayerBadgeErrorResponse_Reason {
	if x != nil {
		return x.Reason
	}
	return SetActivePlayerBadgeErrorResponse_PLAYER_DOESNT_HAVE_BADGE
}

type GetActivePlayerBadgeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// player_id of type UUID
	PlayerId      string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetActivePlayerBadgeRequest) Reset() {
	*x = GetActivePlayerBadgeRequest{}
	mi := &file_badges_grpc_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetActivePlayerBadgeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActivePlayerBadgeRequest) ProtoMessage() {}

func (x *GetActivePlayerBadgeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_badges_grpc_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActivePlayerBadgeRequest.ProtoReflect.Descriptor instead.
func (*GetActivePlayerBadgeRequest) Descriptor() ([]byte, []int) {
	return file_badges_grpc_proto_rawDescGZIP(), []int{5}
}

func (x *GetActivePlayerBadgeRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

type GetActivePlayerBadgeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Badge         *badge.Badge           `protobuf:"bytes,1,opt,name=badge,proto3" json:"badge,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetActivePlayerBadgeResponse) Reset() {
	*x = GetActivePlayerBadgeResponse{}
	mi := &file_badges_grpc_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetActivePlayerBadgeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActivePlayerBadgeResponse) ProtoMessage() {}

func (x *GetActivePlayerBadgeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_badges_grpc_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActivePlayerBadgeResponse.ProtoReflect.Descriptor instead.
func (*GetActivePlayerBadgeResponse) Descriptor() ([]byte, []int) {
	return file_badges_grpc_proto_rawDescGZIP(), []int{6}
}

func (x *GetActivePlayerBadgeResponse) GetBadge() *badge.Badge {
	if x != nil {
		return x.Badge
	}
	return nil
}

type AddBadgeToPlayerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// player_id of type UUID
	PlayerId      string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	BadgeId       string `protobuf:"bytes,2,opt,name=badge_id,json=badgeId,proto3" json:"badge_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddBadgeToPlayerRequest) Reset() {
	*x = AddBadgeToPlayerRequest{}
	mi := &file_badges_grpc_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddBadgeToPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBadgeToPlayerRequest) ProtoMessage() {}

func (x *AddBadgeToPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_badges_grpc_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBadgeToPlayerRequest.ProtoReflect.Descriptor instead.
func (*AddBadgeToPlayerRequest) Descriptor() ([]byte, []int) {
	return file_badges_grpc_proto_rawDescGZIP(), []int{7}
}

func (x *AddBadgeToPlayerRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *AddBadgeToPlayerRequest) GetBadgeId() string {
	if x != nil {
		return x.BadgeId
	}
	return ""
}

type AddBadgeToPlayerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddBadgeToPlayerResponse) Reset() {
	*x = AddBadgeToPlayerResponse{}
	mi := &file_badges_grpc_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddBadgeToPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBadgeToPlayerResponse) ProtoMessage() {}

func (x *AddBadgeToPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_badges_grpc_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBadgeToPlayerResponse.ProtoReflect.Descriptor instead.
func (*AddBadgeToPlayerResponse) Descriptor() ([]byte, []int) {
	return file_badges_grpc_proto_rawDescGZIP(), []int{8}
}

type AddBadgeToPlayerErrorResponse struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Reason        AddBadgeToPlayerErrorResponse_Reason `protobuf:"varint,1,opt,name=reason,proto3,enum=emortal.grpc.badge.AddBadgeToPlayerErrorResponse_Reason" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddBadgeToPlayerErrorResponse) Reset() {
	*x = AddBadgeToPlayerErrorResponse{}
	mi := &file_badges_grpc_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddBadgeToPlayerErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBadgeToPlayerErrorResponse) ProtoMessage() {}

func (x *AddBadgeToPlayerErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_badges_grpc_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBadgeToPlayerErrorResponse.ProtoReflect.Descriptor instead.
func (*AddBadgeToPlayerErrorResponse) Descriptor() ([]byte, []int) {
	return file_badges_grpc_proto_rawDescGZIP(), []int{9}
}

func (x *AddBadgeToPlayerErrorResponse) GetReason() AddBadgeToPlayerErrorResponse_Reason {
	if x != nil {
		return x.Reason
	}
	return AddBadgeToPlayerErrorResponse_PLAYER_ALREADY_HAS_BADGE
}

type RemoveBadgeFromPlayerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// player_id of type UUID
	PlayerId      string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	BadgeId       string `protobuf:"bytes,2,opt,name=badge_id,json=badgeId,proto3" json:"badge_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveBadgeFromPlayerRequest) Reset() {
	*x = RemoveBadgeFromPlayerRequest{}
	mi := &file_badges_grpc_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveBadgeFromPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveBadgeFromPlayerRequest) ProtoMessage() {}

func (x *RemoveBadgeFromPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_badges_grpc_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveBadgeFromPlayerRequest.ProtoReflect.Descriptor instead.
func (*RemoveBadgeFromPlayerRequest) Descriptor() ([]byte, []int) {
	return file_badges_grpc_proto_rawDescGZIP(), []int{10}
}

func (x *RemoveBadgeFromPlayerRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *RemoveBadgeFromPlayerRequest) GetBadgeId() string {
	if x != nil {
		return x.BadgeId
	}
	return ""
}

type RemoveBadgeFromPlayerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveBadgeFromPlayerResponse) Reset() {
	*x = RemoveBadgeFromPlayerResponse{}
	mi := &file_badges_grpc_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveBadgeFromPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveBadgeFromPlayerResponse) ProtoMessage() {}

func (x *RemoveBadgeFromPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_badges_grpc_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveBadgeFromPlayerResponse.ProtoReflect.Descriptor instead.
func (*RemoveBadgeFromPlayerResponse) Descriptor() ([]byte, []int) {
	return file_badges_grpc_proto_rawDescGZIP(), []int{11}
}

type RemoveBadgeFromPlayerErrorResponse struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	Reason        RemoveBadgeFromPlayerErrorResponse_Reason `protobuf:"varint,1,opt,name=reason,proto3,enum=emortal.grpc.badge.RemoveBadgeFromPlayerErrorResponse_Reason" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveBadgeFromPlayerErrorResponse) Reset() {
	*x = RemoveBadgeFromPlayerErrorResponse{}
	mi := &file_badges_grpc_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveBadgeFromPlayerErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveBadgeFromPlayerErrorResponse) ProtoMessage() {}

func (x *RemoveBadgeFromPlayerErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_badges_grpc_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveBadgeFromPlayerErrorResponse.ProtoReflect.Descriptor instead.
func (*RemoveBadgeFromPlayerErrorResponse) Descriptor() ([]byte, []int) {
	return file_badges_grpc_proto_rawDescGZIP(), []int{12}
}

func (x *RemoveBadgeFromPlayerErrorResponse) GetReason() RemoveBadgeFromPlayerErrorResponse_Reason {
	if x != nil {
		return x.Reason
	}
	return RemoveBadgeFromPlayerErrorResponse_PLAYER_DOESNT_HAVE_BADGE
}

type GetBadgesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBadgesRequest) Reset() {
	*x = GetBadgesRequest{}
	mi := &file_badges_grpc_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBadgesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBadgesRequest) ProtoMessage() {}

func (x *GetBadgesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_badges_grpc_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBadgesRequest.ProtoReflect.Descriptor instead.
func (*GetBadgesRequest) Descriptor() ([]byte, []int) {
	return file_badges_grpc_proto_rawDescGZIP(), []int{13}
}

type GetBadgesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Badges        []*badge.Badge         `protobuf:"bytes,1,rep,name=badges,proto3" json:"badges,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBadgesResponse) Reset() {
	*x = GetBadgesResponse{}
	mi := &file_badges_grpc_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBadgesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBadgesResponse) ProtoMessage() {}

func (x *GetBadgesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_badges_grpc_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBadgesResponse.ProtoReflect.Descriptor instead.
func (*GetBadgesResponse) Descriptor() ([]byte, []int) {
	return file_badges_grpc_proto_rawDescGZIP(), []int{14}
}

func (x *GetBadgesResponse) GetBadges() []*badge.Badge {
	if x != nil {
		return x.Badges
	}
	return nil
}

var File_badges_grpc_proto protoreflect.FileDescriptor

const file_badges_grpc_proto_rawDesc = "" +
	"\n" +
	"\x11badges/grpc.proto\x12\x12emortal.grpc.badge\x1a\x13badges/models.proto\"5\n" +
	"\x16GetPlayerBadgesRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\"\x8e\x01\n" +
	"\x17GetPlayerBadgesResponse\x122\n" +
	"\x06badges\x18\x01 \x03(\v2\x1a.emortal.model.badge.BadgeR\x06badges\x12+\n" +
	"\x0factive_badge_id\x18\x02 \x01(\tH\x00R\ractiveBadgeId\x88\x01\x01B\x12\n" +
	"\x10_active_badge_id\"U\n" +
	"\x1bSetActivePlayerBadgeRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x19\n" +
	"\bbadge_id\x18\x02 \x01(\tR\abadgeId\"\x1e\n" +
	"\x1cSetActivePlayerBadgeResponse\"\xa1\x01\n" +
	"!SetActivePlayerBadgeErrorResponse\x12T\n" +
	"\x06reason\x18\x01 \x01(\x0e2<.emortal.grpc.badge.SetActivePlayerBadgeErrorResponse.ReasonR\x06reason\"&\n" +
	"\x06Reason\x12\x1c\n" +
	"\x18PLAYER_DOESNT_HAVE_BADGE\x10\x00\":\n" +
	"\x1bGetActivePlayerBadgeRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\"P\n" +
	"\x1cGetActivePlayerBadgeResponse\x120\n" +
	"\x05badge\x18\x01 \x01(\v2\x1a.emortal.model.badge.BadgeR\x05badge\"Q\n" +
	"\x17AddBadgeToPlayerRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x19\n" +
	"\bbadge_id\x18\x02 \x01(\tR\abadgeId\"\x1a\n" +
	"\x18AddBadgeToPlayerResponse\"\x99\x01\n" +
	"\x1dAddBadgeToPlayerErrorResponse\x12P\n" +
	"\x06reason\x18\x01 \x01(\x0e28.emortal.grpc.badge.AddBadgeToPlayerErrorResponse.ReasonR\x06reason\"&\n" +
	"\x06Reason\x12\x1c\n" +
	"\x18PLAYER_ALREADY_HAS_BADGE\x10\x00\"V\n" +
	"\x1cRemoveBadgeFromPlayerRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x19\n" +
	"\bbadge_id\x18\x02 \x01(\tR\abadgeId\"\x1f\n" +
	"\x1dRemoveBadgeFromPlayerResponse\"\xa3\x01\n" +
	"\"RemoveBadgeFromPlayerErrorResponse\x12U\n" +
	"\x06reason\x18\x01 \x01(\x0e2=.emortal.grpc.badge.RemoveBadgeFromPlayerErrorResponse.ReasonR\x06reason\"&\n" +
	"\x06Reason\x12\x1c\n" +
	"\x18PLAYER_DOESNT_HAVE_BADGE\x10\x00\"\x12\n" +
	"\x10GetBadgesRequest\"G\n" +
	"\x11GetBadgesResponse\x122\n" +
	"\x06badges\x18\x01 \x03(\v2\x1a.emortal.model.badge.BadgeR\x06badges2\xc3\x05\n" +
	"\fBadgeManager\x12l\n" +
	"\x0fGetPlayerBadges\x12*.emortal.grpc.badge.GetPlayerBadgesRequest\x1a+.emortal.grpc.badge.GetPlayerBadgesResponse\"\x00\x12{\n" +
	"\x14GetActivePlayerBadge\x12/.emortal.grpc.badge.GetActivePlayerBadgeRequest\x1a0.emortal.grpc.badge.GetActivePlayerBadgeResponse\"\x00\x12{\n" +
	"\x14SetActivePlayerBadge\x12/.emortal.grpc.badge.SetActivePlayerBadgeRequest\x1a0.emortal.grpc.badge.SetActivePlayerBadgeResponse\"\x00\x12o\n" +
	"\x10AddBadgeToPlayer\x12+.emortal.grpc.badge.AddBadgeToPlayerRequest\x1a,.emortal.grpc.badge.AddBadgeToPlayerResponse\"\x00\x12~\n" +
	"\x15RemoveBadgeFromPlayer\x120.emortal.grpc.badge.RemoveBadgeFromPlayerRequest\x1a1.emortal.grpc.badge.RemoveBadgeFromPlayerResponse\"\x00\x12Z\n" +
	"\tGetBadges\x12$.emortal.grpc.badge.GetBadgesRequest\x1a%.emortal.grpc.badge.GetBadgesResponse\"\x00Bc\n" +
	"\x1adev.emortal.api.grpc.badgeB\x11BadgeManagerProtoZ2github.com/emortalmc/proto-specs/gen/go/grpc/badgeb\x06proto3"

var (
	file_badges_grpc_proto_rawDescOnce sync.Once
	file_badges_grpc_proto_rawDescData []byte
)

func file_badges_grpc_proto_rawDescGZIP() []byte {
	file_badges_grpc_proto_rawDescOnce.Do(func() {
		file_badges_grpc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_badges_grpc_proto_rawDesc), len(file_badges_grpc_proto_rawDesc)))
	})
	return file_badges_grpc_proto_rawDescData
}

var file_badges_grpc_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_badges_grpc_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_badges_grpc_proto_goTypes = []any{
	(SetActivePlayerBadgeErrorResponse_Reason)(0),  // 0: emortal.grpc.badge.SetActivePlayerBadgeErrorResponse.Reason
	(AddBadgeToPlayerErrorResponse_Reason)(0),      // 1: emortal.grpc.badge.AddBadgeToPlayerErrorResponse.Reason
	(RemoveBadgeFromPlayerErrorResponse_Reason)(0), // 2: emortal.grpc.badge.RemoveBadgeFromPlayerErrorResponse.Reason
	(*GetPlayerBadgesRequest)(nil),                 // 3: emortal.grpc.badge.GetPlayerBadgesRequest
	(*GetPlayerBadgesResponse)(nil),                // 4: emortal.grpc.badge.GetPlayerBadgesResponse
	(*SetActivePlayerBadgeRequest)(nil),            // 5: emortal.grpc.badge.SetActivePlayerBadgeRequest
	(*SetActivePlayerBadgeResponse)(nil),           // 6: emortal.grpc.badge.SetActivePlayerBadgeResponse
	(*SetActivePlayerBadgeErrorResponse)(nil),      // 7: emortal.grpc.badge.SetActivePlayerBadgeErrorResponse
	(*GetActivePlayerBadgeRequest)(nil),            // 8: emortal.grpc.badge.GetActivePlayerBadgeRequest
	(*GetActivePlayerBadgeResponse)(nil),           // 9: emortal.grpc.badge.GetActivePlayerBadgeResponse
	(*AddBadgeToPlayerRequest)(nil),                // 10: emortal.grpc.badge.AddBadgeToPlayerRequest
	(*AddBadgeToPlayerResponse)(nil),               // 11: emortal.grpc.badge.AddBadgeToPlayerResponse
	(*AddBadgeToPlayerErrorResponse)(nil),          // 12: emortal.grpc.badge.AddBadgeToPlayerErrorResponse
	(*RemoveBadgeFromPlayerRequest)(nil),           // 13: emortal.grpc.badge.RemoveBadgeFromPlayerRequest
	(*RemoveBadgeFromPlayerResponse)(nil),          // 14: emortal.grpc.badge.RemoveBadgeFromPlayerResponse
	(*RemoveBadgeFromPlayerErrorResponse)(nil),     // 15: emortal.grpc.badge.RemoveBadgeFromPlayerErrorResponse
	(*GetBadgesRequest)(nil),                       // 16: emortal.grpc.badge.GetBadgesRequest
	(*GetBadgesResponse)(nil),                      // 17: emortal.grpc.badge.GetBadgesResponse
	(*badge.Badge)(nil),                            // 18: emortal.model.badge.Badge
}
var file_badges_grpc_proto_depIdxs = []int32{
	18, // 0: emortal.grpc.badge.GetPlayerBadgesResponse.badges:type_name -> emortal.model.badge.Badge
	0,  // 1: emortal.grpc.badge.SetActivePlayerBadgeErrorResponse.reason:type_name -> emortal.grpc.badge.SetActivePlayerBadgeErrorResponse.Reason
	18, // 2: emortal.grpc.badge.GetActivePlayerBadgeResponse.badge:type_name -> emortal.model.badge.Badge
	1,  // 3: emortal.grpc.badge.AddBadgeToPlayerErrorResponse.reason:type_name -> emortal.grpc.badge.AddBadgeToPlayerErrorResponse.Reason
	2,  // 4: emortal.grpc.badge.RemoveBadgeFromPlayerErrorResponse.reason:type_name -> emortal.grpc.badge.RemoveBadgeFromPlayerErrorResponse.Reason
	18, // 5: emortal.grpc.badge.GetBadgesResponse.badges:type_name -> emortal.model.badge.Badge
	3,  // 6: emortal.grpc.badge.BadgeManager.GetPlayerBadges:input_type -> emortal.grpc.badge.GetPlayerBadgesRequest
	8,  // 7: emortal.grpc.badge.BadgeManager.GetActivePlayerBadge:input_type -> emortal.grpc.badge.GetActivePlayerBadgeRequest
	5,  // 8: emortal.grpc.badge.BadgeManager.SetActivePlayerBadge:input_type -> emortal.grpc.badge.SetActivePlayerBadgeRequest
	10, // 9: emortal.grpc.badge.BadgeManager.AddBadgeToPlayer:input_type -> emortal.grpc.badge.AddBadgeToPlayerRequest
	13, // 10: emortal.grpc.badge.BadgeManager.RemoveBadgeFromPlayer:input_type -> emortal.grpc.badge.RemoveBadgeFromPlayerRequest
	16, // 11: emortal.grpc.badge.BadgeManager.GetBadges:input_type -> emortal.grpc.badge.GetBadgesRequest
	4,  // 12: emortal.grpc.badge.BadgeManager.GetPlayerBadges:output_type -> emortal.grpc.badge.GetPlayerBadgesResponse
	9,  // 13: emortal.grpc.badge.BadgeManager.GetActivePlayerBadge:output_type -> emortal.grpc.badge.GetActivePlayerBadgeResponse
	6,  // 14: emortal.grpc.badge.BadgeManager.SetActivePlayerBadge:output_type -> emortal.grpc.badge.SetActivePlayerBadgeResponse
	11, // 15: emortal.grpc.badge.BadgeManager.AddBadgeToPlayer:output_type -> emortal.grpc.badge.AddBadgeToPlayerResponse
	14, // 16: emortal.grpc.badge.BadgeManager.RemoveBadgeFromPlayer:output_type -> emortal.grpc.badge.RemoveBadgeFromPlayerResponse
	17, // 17: emortal.grpc.badge.BadgeManager.GetBadges:output_type -> emortal.grpc.badge.GetBadgesResponse
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_badges_grpc_proto_init() }
func file_badges_grpc_proto_init() {
	if File_badges_grpc_proto != nil {
		return
	}
	file_badges_grpc_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_badges_grpc_proto_rawDesc), len(file_badges_grpc_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_badges_grpc_proto_goTypes,
		DependencyIndexes: file_badges_grpc_proto_depIdxs,
		EnumInfos:         file_badges_grpc_proto_enumTypes,
		MessageInfos:      file_badges_grpc_proto_msgTypes,
	}.Build()
	File_badges_grpc_proto = out.File
	file_badges_grpc_proto_goTypes = nil
	file_badges_grpc_proto_depIdxs = nil
}
