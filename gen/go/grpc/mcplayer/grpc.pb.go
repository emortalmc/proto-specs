// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v6.31.1
// source: mc_player/grpc.proto

package mcplayer

import (
	common "github.com/emortalmc/proto-specs/gen/go/model/common"
	mcplayer "github.com/emortalmc/proto-specs/gen/go/model/mcplayer"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SearchPlayersByUsernameRequest_FilterMethod int32

const (
	SearchPlayersByUsernameRequest_NONE    SearchPlayersByUsernameRequest_FilterMethod = 0
	SearchPlayersByUsernameRequest_ONLINE  SearchPlayersByUsernameRequest_FilterMethod = 1
	SearchPlayersByUsernameRequest_FRIENDS SearchPlayersByUsernameRequest_FilterMethod = 2
)

// Enum value maps for SearchPlayersByUsernameRequest_FilterMethod.
var (
	SearchPlayersByUsernameRequest_FilterMethod_name = map[int32]string{
		0: "NONE",
		1: "ONLINE",
		2: "FRIENDS",
	}
	SearchPlayersByUsernameRequest_FilterMethod_value = map[string]int32{
		"NONE":    0,
		"ONLINE":  1,
		"FRIENDS": 2,
	}
)

func (x SearchPlayersByUsernameRequest_FilterMethod) Enum() *SearchPlayersByUsernameRequest_FilterMethod {
	p := new(SearchPlayersByUsernameRequest_FilterMethod)
	*p = x
	return p
}

func (x SearchPlayersByUsernameRequest_FilterMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchPlayersByUsernameRequest_FilterMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_mc_player_grpc_proto_enumTypes[0].Descriptor()
}

func (SearchPlayersByUsernameRequest_FilterMethod) Type() protoreflect.EnumType {
	return &file_mc_player_grpc_proto_enumTypes[0]
}

func (x SearchPlayersByUsernameRequest_FilterMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SearchPlayersByUsernameRequest_FilterMethod.Descriptor instead.
func (SearchPlayersByUsernameRequest_FilterMethod) EnumDescriptor() ([]byte, []int) {
	return file_mc_player_grpc_proto_rawDescGZIP(), []int{7, 0}
}

type GetPlayerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlayerRequest) Reset() {
	*x = GetPlayerRequest{}
	mi := &file_mc_player_grpc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerRequest) ProtoMessage() {}

func (x *GetPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mc_player_grpc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerRequest.ProtoReflect.Descriptor instead.
func (*GetPlayerRequest) Descriptor() ([]byte, []int) {
	return file_mc_player_grpc_proto_rawDescGZIP(), []int{0}
}

func (x *GetPlayerRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

type GetPlayerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Player        *mcplayer.McPlayer     `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlayerResponse) Reset() {
	*x = GetPlayerResponse{}
	mi := &file_mc_player_grpc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerResponse) ProtoMessage() {}

func (x *GetPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mc_player_grpc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerResponse.ProtoReflect.Descriptor instead.
func (*GetPlayerResponse) Descriptor() ([]byte, []int) {
	return file_mc_player_grpc_proto_rawDescGZIP(), []int{1}
}

func (x *GetPlayerResponse) GetPlayer() *mcplayer.McPlayer {
	if x != nil {
		return x.Player
	}
	return nil
}

type GetPlayersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerIds     []string               `protobuf:"bytes,1,rep,name=player_ids,json=playerIds,proto3" json:"player_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlayersRequest) Reset() {
	*x = GetPlayersRequest{}
	mi := &file_mc_player_grpc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlayersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayersRequest) ProtoMessage() {}

func (x *GetPlayersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mc_player_grpc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayersRequest.ProtoReflect.Descriptor instead.
func (*GetPlayersRequest) Descriptor() ([]byte, []int) {
	return file_mc_player_grpc_proto_rawDescGZIP(), []int{2}
}

func (x *GetPlayersRequest) GetPlayerIds() []string {
	if x != nil {
		return x.PlayerIds
	}
	return nil
}

type GetPlayersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Players       []*mcplayer.McPlayer   `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlayersResponse) Reset() {
	*x = GetPlayersResponse{}
	mi := &file_mc_player_grpc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlayersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayersResponse) ProtoMessage() {}

func (x *GetPlayersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mc_player_grpc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayersResponse.ProtoReflect.Descriptor instead.
func (*GetPlayersResponse) Descriptor() ([]byte, []int) {
	return file_mc_player_grpc_proto_rawDescGZIP(), []int{3}
}

func (x *GetPlayersResponse) GetPlayers() []*mcplayer.McPlayer {
	if x != nil {
		return x.Players
	}
	return nil
}

type PlayerUsernameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"` // ignore case when using the username
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerUsernameRequest) Reset() {
	*x = PlayerUsernameRequest{}
	mi := &file_mc_player_grpc_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerUsernameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerUsernameRequest) ProtoMessage() {}

func (x *PlayerUsernameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mc_player_grpc_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerUsernameRequest.ProtoReflect.Descriptor instead.
func (*PlayerUsernameRequest) Descriptor() ([]byte, []int) {
	return file_mc_player_grpc_proto_rawDescGZIP(), []int{4}
}

func (x *PlayerUsernameRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type GetPlayerByUsernameResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Player        *mcplayer.McPlayer     `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlayerByUsernameResponse) Reset() {
	*x = GetPlayerByUsernameResponse{}
	mi := &file_mc_player_grpc_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlayerByUsernameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerByUsernameResponse) ProtoMessage() {}

func (x *GetPlayerByUsernameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mc_player_grpc_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerByUsernameResponse.ProtoReflect.Descriptor instead.
func (*GetPlayerByUsernameResponse) Descriptor() ([]byte, []int) {
	return file_mc_player_grpc_proto_rawDescGZIP(), []int{5}
}

func (x *GetPlayerByUsernameResponse) GetPlayer() *mcplayer.McPlayer {
	if x != nil {
		return x.Player
	}
	return nil
}

type McPageablePlayerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Page          uint32                 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Size          uint32                 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *McPageablePlayerRequest) Reset() {
	*x = McPageablePlayerRequest{}
	mi := &file_mc_player_grpc_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *McPageablePlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*McPageablePlayerRequest) ProtoMessage() {}

func (x *McPageablePlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mc_player_grpc_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use McPageablePlayerRequest.ProtoReflect.Descriptor instead.
func (*McPageablePlayerRequest) Descriptor() ([]byte, []int) {
	return file_mc_player_grpc_proto_rawDescGZIP(), []int{6}
}

func (x *McPageablePlayerRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *McPageablePlayerRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *McPageablePlayerRequest) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type SearchPlayersByUsernameRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	IssuerId       string                 `protobuf:"bytes,1,opt,name=issuer_id,json=issuerId,proto3" json:"issuer_id,omitempty"`
	SearchUsername string                 `protobuf:"bytes,2,opt,name=search_username,json=searchUsername,proto3" json:"search_username,omitempty"`
	// starts with 0
	Pageable     *common.Pageable                            `protobuf:"bytes,3,opt,name=pageable,proto3" json:"pageable,omitempty"`
	FilterMethod SearchPlayersByUsernameRequest_FilterMethod `protobuf:"varint,4,opt,name=filter_method,json=filterMethod,proto3,enum=emortal.grpc.SearchPlayersByUsernameRequest_FilterMethod" json:"filter_method,omitempty"`
	// excluded_player_ids is optional, if provided, will exclude these players from the search
	// so you still get a full page of results even if some of the players are excluded.
	// Type: repeated uuid
	ExcludedPlayerIds []string `protobuf:"bytes,5,rep,name=excluded_player_ids,json=excludedPlayerIds,proto3" json:"excluded_player_ids,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SearchPlayersByUsernameRequest) Reset() {
	*x = SearchPlayersByUsernameRequest{}
	mi := &file_mc_player_grpc_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchPlayersByUsernameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchPlayersByUsernameRequest) ProtoMessage() {}

func (x *SearchPlayersByUsernameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mc_player_grpc_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchPlayersByUsernameRequest.ProtoReflect.Descriptor instead.
func (*SearchPlayersByUsernameRequest) Descriptor() ([]byte, []int) {
	return file_mc_player_grpc_proto_rawDescGZIP(), []int{7}
}

func (x *SearchPlayersByUsernameRequest) GetIssuerId() string {
	if x != nil {
		return x.IssuerId
	}
	return ""
}

func (x *SearchPlayersByUsernameRequest) GetSearchUsername() string {
	if x != nil {
		return x.SearchUsername
	}
	return ""
}

func (x *SearchPlayersByUsernameRequest) GetPageable() *common.Pageable {
	if x != nil {
		return x.Pageable
	}
	return nil
}

func (x *SearchPlayersByUsernameRequest) GetFilterMethod() SearchPlayersByUsernameRequest_FilterMethod {
	if x != nil {
		return x.FilterMethod
	}
	return SearchPlayersByUsernameRequest_NONE
}

func (x *SearchPlayersByUsernameRequest) GetExcludedPlayerIds() []string {
	if x != nil {
		return x.ExcludedPlayerIds
	}
	return nil
}

type SearchPlayersByUsernameResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Players       []*mcplayer.McPlayer   `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty"`
	PageData      *common.PageData       `protobuf:"bytes,2,opt,name=page_data,json=pageData,proto3" json:"page_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchPlayersByUsernameResponse) Reset() {
	*x = SearchPlayersByUsernameResponse{}
	mi := &file_mc_player_grpc_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchPlayersByUsernameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchPlayersByUsernameResponse) ProtoMessage() {}

func (x *SearchPlayersByUsernameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mc_player_grpc_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchPlayersByUsernameResponse.ProtoReflect.Descriptor instead.
func (*SearchPlayersByUsernameResponse) Descriptor() ([]byte, []int) {
	return file_mc_player_grpc_proto_rawDescGZIP(), []int{8}
}

func (x *SearchPlayersByUsernameResponse) GetPlayers() []*mcplayer.McPlayer {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *SearchPlayersByUsernameResponse) GetPageData() *common.PageData {
	if x != nil {
		return x.PageData
	}
	return nil
}

type GetLoginSessionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Pageable      *common.Pageable       `protobuf:"bytes,2,opt,name=pageable,proto3" json:"pageable,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLoginSessionsRequest) Reset() {
	*x = GetLoginSessionsRequest{}
	mi := &file_mc_player_grpc_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLoginSessionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLoginSessionsRequest) ProtoMessage() {}

func (x *GetLoginSessionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mc_player_grpc_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLoginSessionsRequest.ProtoReflect.Descriptor instead.
func (*GetLoginSessionsRequest) Descriptor() ([]byte, []int) {
	return file_mc_player_grpc_proto_rawDescGZIP(), []int{9}
}

func (x *GetLoginSessionsRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *GetLoginSessionsRequest) GetPageable() *common.Pageable {
	if x != nil {
		return x.Pageable
	}
	return nil
}

type LoginSessionsResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Sessions      []*mcplayer.LoginSession `protobuf:"bytes,1,rep,name=sessions,proto3" json:"sessions,omitempty"`
	PageData      *common.PageData         `protobuf:"bytes,2,opt,name=page_data,json=pageData,proto3" json:"page_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginSessionsResponse) Reset() {
	*x = LoginSessionsResponse{}
	mi := &file_mc_player_grpc_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginSessionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginSessionsResponse) ProtoMessage() {}

func (x *LoginSessionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mc_player_grpc_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginSessionsResponse.ProtoReflect.Descriptor instead.
func (*LoginSessionsResponse) Descriptor() ([]byte, []int) {
	return file_mc_player_grpc_proto_rawDescGZIP(), []int{10}
}

func (x *LoginSessionsResponse) GetSessions() []*mcplayer.LoginSession {
	if x != nil {
		return x.Sessions
	}
	return nil
}

func (x *LoginSessionsResponse) GetPageData() *common.PageData {
	if x != nil {
		return x.PageData
	}
	return nil
}

type GetStatTotalUniquePlayersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStatTotalUniquePlayersRequest) Reset() {
	*x = GetStatTotalUniquePlayersRequest{}
	mi := &file_mc_player_grpc_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStatTotalUniquePlayersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatTotalUniquePlayersRequest) ProtoMessage() {}

func (x *GetStatTotalUniquePlayersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mc_player_grpc_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatTotalUniquePlayersRequest.ProtoReflect.Descriptor instead.
func (*GetStatTotalUniquePlayersRequest) Descriptor() ([]byte, []int) {
	return file_mc_player_grpc_proto_rawDescGZIP(), []int{11}
}

type GetStatTotalUniquePlayersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int64                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStatTotalUniquePlayersResponse) Reset() {
	*x = GetStatTotalUniquePlayersResponse{}
	mi := &file_mc_player_grpc_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStatTotalUniquePlayersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatTotalUniquePlayersResponse) ProtoMessage() {}

func (x *GetStatTotalUniquePlayersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mc_player_grpc_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatTotalUniquePlayersResponse.ProtoReflect.Descriptor instead.
func (*GetStatTotalUniquePlayersResponse) Descriptor() ([]byte, []int) {
	return file_mc_player_grpc_proto_rawDescGZIP(), []int{12}
}

func (x *GetStatTotalUniquePlayersResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetStatTotalPlaytimeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStatTotalPlaytimeRequest) Reset() {
	*x = GetStatTotalPlaytimeRequest{}
	mi := &file_mc_player_grpc_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStatTotalPlaytimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatTotalPlaytimeRequest) ProtoMessage() {}

func (x *GetStatTotalPlaytimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mc_player_grpc_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatTotalPlaytimeRequest.ProtoReflect.Descriptor instead.
func (*GetStatTotalPlaytimeRequest) Descriptor() ([]byte, []int) {
	return file_mc_player_grpc_proto_rawDescGZIP(), []int{13}
}

type GetStatTotalPlaytimeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlaytimeHours int64                  `protobuf:"varint,1,opt,name=playtime_hours,json=playtimeHours,proto3" json:"playtime_hours,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStatTotalPlaytimeResponse) Reset() {
	*x = GetStatTotalPlaytimeResponse{}
	mi := &file_mc_player_grpc_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStatTotalPlaytimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatTotalPlaytimeResponse) ProtoMessage() {}

func (x *GetStatTotalPlaytimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mc_player_grpc_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatTotalPlaytimeResponse.ProtoReflect.Descriptor instead.
func (*GetStatTotalPlaytimeResponse) Descriptor() ([]byte, []int) {
	return file_mc_player_grpc_proto_rawDescGZIP(), []int{14}
}

func (x *GetStatTotalPlaytimeResponse) GetPlaytimeHours() int64 {
	if x != nil {
		return x.PlaytimeHours
	}
	return 0
}

type GetPlayerServersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerIds     []string               `protobuf:"bytes,1,rep,name=player_ids,json=playerIds,proto3" json:"player_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlayerServersRequest) Reset() {
	*x = GetPlayerServersRequest{}
	mi := &file_mc_player_grpc_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlayerServersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerServersRequest) ProtoMessage() {}

func (x *GetPlayerServersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mc_player_grpc_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerServersRequest.ProtoReflect.Descriptor instead.
func (*GetPlayerServersRequest) Descriptor() ([]byte, []int) {
	return file_mc_player_grpc_proto_rawDescGZIP(), []int{15}
}

func (x *GetPlayerServersRequest) GetPlayerIds() []string {
	if x != nil {
		return x.PlayerIds
	}
	return nil
}

type GetPlayerServersResponse struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	PlayerServers map[string]*mcplayer.CurrentServer `protobuf:"bytes,1,rep,name=player_servers,json=playerServers,proto3" json:"player_servers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlayerServersResponse) Reset() {
	*x = GetPlayerServersResponse{}
	mi := &file_mc_player_grpc_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlayerServersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerServersResponse) ProtoMessage() {}

func (x *GetPlayerServersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mc_player_grpc_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerServersResponse.ProtoReflect.Descriptor instead.
func (*GetPlayerServersResponse) Descriptor() ([]byte, []int) {
	return file_mc_player_grpc_proto_rawDescGZIP(), []int{16}
}

func (x *GetPlayerServersResponse) GetPlayerServers() map[string]*mcplayer.CurrentServer {
	if x != nil {
		return x.PlayerServers
	}
	return nil
}

type GetServerPlayersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServerPlayersRequest) Reset() {
	*x = GetServerPlayersRequest{}
	mi := &file_mc_player_grpc_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServerPlayersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerPlayersRequest) ProtoMessage() {}

func (x *GetServerPlayersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mc_player_grpc_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerPlayersRequest.ProtoReflect.Descriptor instead.
func (*GetServerPlayersRequest) Descriptor() ([]byte, []int) {
	return file_mc_player_grpc_proto_rawDescGZIP(), []int{17}
}

func (x *GetServerPlayersRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

type GetServerPlayersResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	OnlinePlayers []*mcplayer.OnlinePlayer `protobuf:"bytes,1,rep,name=online_players,json=onlinePlayers,proto3" json:"online_players,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServerPlayersResponse) Reset() {
	*x = GetServerPlayersResponse{}
	mi := &file_mc_player_grpc_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServerPlayersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerPlayersResponse) ProtoMessage() {}

func (x *GetServerPlayersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mc_player_grpc_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerPlayersResponse.ProtoReflect.Descriptor instead.
func (*GetServerPlayersResponse) Descriptor() ([]byte, []int) {
	return file_mc_player_grpc_proto_rawDescGZIP(), []int{18}
}

func (x *GetServerPlayersResponse) GetOnlinePlayers() []*mcplayer.OnlinePlayer {
	if x != nil {
		return x.OnlinePlayers
	}
	return nil
}

type GetPlayerCountRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// server_id is optional, if not provided, will fall back to server_types
	ServerId *string `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3,oneof" json:"server_id,omitempty"`
	// fleet_names is optional, if not provided, will fall back to global count
	FleetNames    []string `protobuf:"bytes,2,rep,name=fleet_names,json=fleetNames,proto3" json:"fleet_names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlayerCountRequest) Reset() {
	*x = GetPlayerCountRequest{}
	mi := &file_mc_player_grpc_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlayerCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerCountRequest) ProtoMessage() {}

func (x *GetPlayerCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mc_player_grpc_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerCountRequest.ProtoReflect.Descriptor instead.
func (*GetPlayerCountRequest) Descriptor() ([]byte, []int) {
	return file_mc_player_grpc_proto_rawDescGZIP(), []int{19}
}

func (x *GetPlayerCountRequest) GetServerId() string {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return ""
}

func (x *GetPlayerCountRequest) GetFleetNames() []string {
	if x != nil {
		return x.FleetNames
	}
	return nil
}

type GetPlayerCountResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int64                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlayerCountResponse) Reset() {
	*x = GetPlayerCountResponse{}
	mi := &file_mc_player_grpc_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlayerCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerCountResponse) ProtoMessage() {}

func (x *GetPlayerCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mc_player_grpc_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerCountResponse.ProtoReflect.Descriptor instead.
func (*GetPlayerCountResponse) Descriptor() ([]byte, []int) {
	return file_mc_player_grpc_proto_rawDescGZIP(), []int{20}
}

func (x *GetPlayerCountResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetFleetsPlayerCountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FleetNames    []string               `protobuf:"bytes,1,rep,name=fleet_names,json=fleetNames,proto3" json:"fleet_names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFleetsPlayerCountRequest) Reset() {
	*x = GetFleetsPlayerCountRequest{}
	mi := &file_mc_player_grpc_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFleetsPlayerCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFleetsPlayerCountRequest) ProtoMessage() {}

func (x *GetFleetsPlayerCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mc_player_grpc_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFleetsPlayerCountRequest.ProtoReflect.Descriptor instead.
func (*GetFleetsPlayerCountRequest) Descriptor() ([]byte, []int) {
	return file_mc_player_grpc_proto_rawDescGZIP(), []int{21}
}

func (x *GetFleetsPlayerCountRequest) GetFleetNames() []string {
	if x != nil {
		return x.FleetNames
	}
	return nil
}

type GetFleetsPlayerCountResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	FleetPlayerCounts map[string]int64       `protobuf:"bytes,1,rep,name=fleet_player_counts,json=fleetPlayerCounts,proto3" json:"fleet_player_counts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetFleetsPlayerCountResponse) Reset() {
	*x = GetFleetsPlayerCountResponse{}
	mi := &file_mc_player_grpc_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFleetsPlayerCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFleetsPlayerCountResponse) ProtoMessage() {}

func (x *GetFleetsPlayerCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mc_player_grpc_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFleetsPlayerCountResponse.ProtoReflect.Descriptor instead.
func (*GetFleetsPlayerCountResponse) Descriptor() ([]byte, []int) {
	return file_mc_player_grpc_proto_rawDescGZIP(), []int{22}
}

func (x *GetFleetsPlayerCountResponse) GetFleetPlayerCounts() map[string]int64 {
	if x != nil {
		return x.FleetPlayerCounts
	}
	return nil
}

type GetGlobalPlayersSummaryRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// server_id is optional, if not provided, will fall back to server_types
	ServerId *string `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3,oneof" json:"server_id,omitempty"`
	// fleet_names is optional, if not provided, will fall back to global
	FleetNames    []string `protobuf:"bytes,2,rep,name=fleet_names,json=fleetNames,proto3" json:"fleet_names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGlobalPlayersSummaryRequest) Reset() {
	*x = GetGlobalPlayersSummaryRequest{}
	mi := &file_mc_player_grpc_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGlobalPlayersSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGlobalPlayersSummaryRequest) ProtoMessage() {}

func (x *GetGlobalPlayersSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mc_player_grpc_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGlobalPlayersSummaryRequest.ProtoReflect.Descriptor instead.
func (*GetGlobalPlayersSummaryRequest) Descriptor() ([]byte, []int) {
	return file_mc_player_grpc_proto_rawDescGZIP(), []int{23}
}

func (x *GetGlobalPlayersSummaryRequest) GetServerId() string {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return ""
}

func (x *GetGlobalPlayersSummaryRequest) GetFleetNames() []string {
	if x != nil {
		return x.FleetNames
	}
	return nil
}

type GetGlobalPlayersSummaryResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Players       []*mcplayer.OnlinePlayer `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGlobalPlayersSummaryResponse) Reset() {
	*x = GetGlobalPlayersSummaryResponse{}
	mi := &file_mc_player_grpc_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGlobalPlayersSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGlobalPlayersSummaryResponse) ProtoMessage() {}

func (x *GetGlobalPlayersSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mc_player_grpc_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGlobalPlayersSummaryResponse.ProtoReflect.Descriptor instead.
func (*GetGlobalPlayersSummaryResponse) Descriptor() ([]byte, []int) {
	return file_mc_player_grpc_proto_rawDescGZIP(), []int{24}
}

func (x *GetGlobalPlayersSummaryResponse) GetPlayers() []*mcplayer.OnlinePlayer {
	if x != nil {
		return x.Players
	}
	return nil
}

type AddExperienceToPlayersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// player_ids of type UUID
	PlayerIds  []string `protobuf:"bytes,1,rep,name=player_ids,json=playerIds,proto3" json:"player_ids,omitempty"`
	Experience uint64   `protobuf:"varint,2,opt,name=experience,proto3" json:"experience,omitempty"`
	// reason, friendly formatted e.g: "Playtime", "Vote Reward", "Achievement: Do Something IV"
	Reason        string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddExperienceToPlayersRequest) Reset() {
	*x = AddExperienceToPlayersRequest{}
	mi := &file_mc_player_grpc_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddExperienceToPlayersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddExperienceToPlayersRequest) ProtoMessage() {}

func (x *AddExperienceToPlayersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mc_player_grpc_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddExperienceToPlayersRequest.ProtoReflect.Descriptor instead.
func (*AddExperienceToPlayersRequest) Descriptor() ([]byte, []int) {
	return file_mc_player_grpc_proto_rawDescGZIP(), []int{25}
}

func (x *AddExperienceToPlayersRequest) GetPlayerIds() []string {
	if x != nil {
		return x.PlayerIds
	}
	return nil
}

func (x *AddExperienceToPlayersRequest) GetExperience() uint64 {
	if x != nil {
		return x.Experience
	}
	return 0
}

func (x *AddExperienceToPlayersRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type AddExperienceToPlayersResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// experience is a map<player_id, experience> where player_id is of type UUID
	Experience    map[string]uint64 `protobuf:"bytes,1,rep,name=experience,proto3" json:"experience,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddExperienceToPlayersResponse) Reset() {
	*x = AddExperienceToPlayersResponse{}
	mi := &file_mc_player_grpc_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddExperienceToPlayersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddExperienceToPlayersResponse) ProtoMessage() {}

func (x *AddExperienceToPlayersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mc_player_grpc_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddExperienceToPlayersResponse.ProtoReflect.Descriptor instead.
func (*AddExperienceToPlayersResponse) Descriptor() ([]byte, []int) {
	return file_mc_player_grpc_proto_rawDescGZIP(), []int{26}
}

func (x *AddExperienceToPlayersResponse) GetExperience() map[string]uint64 {
	if x != nil {
		return x.Experience
	}
	return nil
}

type GetPlayerExperienceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// player_id of type UUID
	PlayerId      string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlayerExperienceRequest) Reset() {
	*x = GetPlayerExperienceRequest{}
	mi := &file_mc_player_grpc_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlayerExperienceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerExperienceRequest) ProtoMessage() {}

func (x *GetPlayerExperienceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mc_player_grpc_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerExperienceRequest.ProtoReflect.Descriptor instead.
func (*GetPlayerExperienceRequest) Descriptor() ([]byte, []int) {
	return file_mc_player_grpc_proto_rawDescGZIP(), []int{27}
}

func (x *GetPlayerExperienceRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

type GetPlayerExperienceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Experience    uint64                 `protobuf:"varint,1,opt,name=experience,proto3" json:"experience,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlayerExperienceResponse) Reset() {
	*x = GetPlayerExperienceResponse{}
	mi := &file_mc_player_grpc_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlayerExperienceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerExperienceResponse) ProtoMessage() {}

func (x *GetPlayerExperienceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mc_player_grpc_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerExperienceResponse.ProtoReflect.Descriptor instead.
func (*GetPlayerExperienceResponse) Descriptor() ([]byte, []int) {
	return file_mc_player_grpc_proto_rawDescGZIP(), []int{28}
}

func (x *GetPlayerExperienceResponse) GetExperience() uint64 {
	if x != nil {
		return x.Experience
	}
	return 0
}

var File_mc_player_grpc_proto protoreflect.FileDescriptor

const file_mc_player_grpc_proto_rawDesc = "" +
	"\n" +
	"\x14mc_player/grpc.proto\x12\femortal.grpc\x1a\x16mc_player/models.proto\x1a\x13common_models.proto\"/\n" +
	"\x10GetPlayerRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\"D\n" +
	"\x11GetPlayerResponse\x12/\n" +
	"\x06player\x18\x01 \x01(\v2\x17.emortal.model.McPlayerR\x06player\"2\n" +
	"\x11GetPlayersRequest\x12\x1d\n" +
	"\n" +
	"player_ids\x18\x01 \x03(\tR\tplayerIds\"G\n" +
	"\x12GetPlayersResponse\x121\n" +
	"\aplayers\x18\x01 \x03(\v2\x17.emortal.model.McPlayerR\aplayers\"3\n" +
	"\x15PlayerUsernameRequest\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\"N\n" +
	"\x1bGetPlayerByUsernameResponse\x12/\n" +
	"\x06player\x18\x01 \x01(\v2\x17.emortal.model.McPlayerR\x06player\"^\n" +
	"\x17McPageablePlayerRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x12\n" +
	"\x04page\x18\x02 \x01(\rR\x04page\x12\x12\n" +
	"\x04size\x18\x03 \x01(\rR\x04size\"\xde\x02\n" +
	"\x1eSearchPlayersByUsernameRequest\x12\x1b\n" +
	"\tissuer_id\x18\x01 \x01(\tR\bissuerId\x12'\n" +
	"\x0fsearch_username\x18\x02 \x01(\tR\x0esearchUsername\x123\n" +
	"\bpageable\x18\x03 \x01(\v2\x17.emortal.model.PageableR\bpageable\x12^\n" +
	"\rfilter_method\x18\x04 \x01(\x0e29.emortal.grpc.SearchPlayersByUsernameRequest.FilterMethodR\ffilterMethod\x12.\n" +
	"\x13excluded_player_ids\x18\x05 \x03(\tR\x11excludedPlayerIds\"1\n" +
	"\fFilterMethod\x12\b\n" +
	"\x04NONE\x10\x00\x12\n" +
	"\n" +
	"\x06ONLINE\x10\x01\x12\v\n" +
	"\aFRIENDS\x10\x02\"\x8a\x01\n" +
	"\x1fSearchPlayersByUsernameResponse\x121\n" +
	"\aplayers\x18\x01 \x03(\v2\x17.emortal.model.McPlayerR\aplayers\x124\n" +
	"\tpage_data\x18\x02 \x01(\v2\x17.emortal.model.PageDataR\bpageData\"k\n" +
	"\x17GetLoginSessionsRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x123\n" +
	"\bpageable\x18\x02 \x01(\v2\x17.emortal.model.PageableR\bpageable\"\x86\x01\n" +
	"\x15LoginSessionsResponse\x127\n" +
	"\bsessions\x18\x01 \x03(\v2\x1b.emortal.model.LoginSessionR\bsessions\x124\n" +
	"\tpage_data\x18\x02 \x01(\v2\x17.emortal.model.PageDataR\bpageData\"\"\n" +
	" GetStatTotalUniquePlayersRequest\"9\n" +
	"!GetStatTotalUniquePlayersResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x03R\x05count\"\x1d\n" +
	"\x1bGetStatTotalPlaytimeRequest\"E\n" +
	"\x1cGetStatTotalPlaytimeResponse\x12%\n" +
	"\x0eplaytime_hours\x18\x01 \x01(\x03R\rplaytimeHours\"8\n" +
	"\x17GetPlayerServersRequest\x12\x1d\n" +
	"\n" +
	"player_ids\x18\x01 \x03(\tR\tplayerIds\"\xdc\x01\n" +
	"\x18GetPlayerServersResponse\x12`\n" +
	"\x0eplayer_servers\x18\x01 \x03(\v29.emortal.grpc.GetPlayerServersResponse.PlayerServersEntryR\rplayerServers\x1a^\n" +
	"\x12PlayerServersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x122\n" +
	"\x05value\x18\x02 \x01(\v2\x1c.emortal.model.CurrentServerR\x05value:\x028\x01\"6\n" +
	"\x17GetServerPlayersRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\"^\n" +
	"\x18GetServerPlayersResponse\x12B\n" +
	"\x0eonline_players\x18\x01 \x03(\v2\x1b.emortal.model.OnlinePlayerR\ronlinePlayers\"h\n" +
	"\x15GetPlayerCountRequest\x12 \n" +
	"\tserver_id\x18\x01 \x01(\tH\x00R\bserverId\x88\x01\x01\x12\x1f\n" +
	"\vfleet_names\x18\x02 \x03(\tR\n" +
	"fleetNamesB\f\n" +
	"\n" +
	"_server_id\".\n" +
	"\x16GetPlayerCountResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x03R\x05count\">\n" +
	"\x1bGetFleetsPlayerCountRequest\x12\x1f\n" +
	"\vfleet_names\x18\x01 \x03(\tR\n" +
	"fleetNames\"\xd7\x01\n" +
	"\x1cGetFleetsPlayerCountResponse\x12q\n" +
	"\x13fleet_player_counts\x18\x01 \x03(\v2A.emortal.grpc.GetFleetsPlayerCountResponse.FleetPlayerCountsEntryR\x11fleetPlayerCounts\x1aD\n" +
	"\x16FleetPlayerCountsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\"q\n" +
	"\x1eGetGlobalPlayersSummaryRequest\x12 \n" +
	"\tserver_id\x18\x01 \x01(\tH\x00R\bserverId\x88\x01\x01\x12\x1f\n" +
	"\vfleet_names\x18\x02 \x03(\tR\n" +
	"fleetNamesB\f\n" +
	"\n" +
	"_server_id\"X\n" +
	"\x1fGetGlobalPlayersSummaryResponse\x125\n" +
	"\aplayers\x18\x01 \x03(\v2\x1b.emortal.model.OnlinePlayerR\aplayers\"v\n" +
	"\x1dAddExperienceToPlayersRequest\x12\x1d\n" +
	"\n" +
	"player_ids\x18\x01 \x03(\tR\tplayerIds\x12\x1e\n" +
	"\n" +
	"experience\x18\x02 \x01(\x04R\n" +
	"experience\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\"\xbd\x01\n" +
	"\x1eAddExperienceToPlayersResponse\x12\\\n" +
	"\n" +
	"experience\x18\x01 \x03(\v2<.emortal.grpc.AddExperienceToPlayersResponse.ExperienceEntryR\n" +
	"experience\x1a=\n" +
	"\x0fExperienceEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x04R\x05value:\x028\x01\"9\n" +
	"\x1aGetPlayerExperienceRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\"=\n" +
	"\x1bGetPlayerExperienceResponse\x12\x1e\n" +
	"\n" +
	"experience\x18\x01 \x01(\x04R\n" +
	"experience2\xc8\a\n" +
	"\bMcPlayer\x12N\n" +
	"\tGetPlayer\x12\x1e.emortal.grpc.GetPlayerRequest\x1a\x1f.emortal.grpc.GetPlayerResponse\"\x00\x12Q\n" +
	"\n" +
	"GetPlayers\x12\x1f.emortal.grpc.GetPlayersRequest\x1a .emortal.grpc.GetPlayersResponse\"\x00\x12g\n" +
	"\x13GetPlayerByUsername\x12#.emortal.grpc.PlayerUsernameRequest\x1a).emortal.grpc.GetPlayerByUsernameResponse\"\x00\x12x\n" +
	"\x17SearchPlayersByUsername\x12,.emortal.grpc.SearchPlayersByUsernameRequest\x1a-.emortal.grpc.SearchPlayersByUsernameResponse\"\x00\x12`\n" +
	"\x10GetLoginSessions\x12%.emortal.grpc.GetLoginSessionsRequest\x1a#.emortal.grpc.LoginSessionsResponse\"\x00\x12~\n" +
	"\x19GetStatTotalUniquePlayers\x12..emortal.grpc.GetStatTotalUniquePlayersRequest\x1a/.emortal.grpc.GetStatTotalUniquePlayersResponse\"\x00\x12o\n" +
	"\x14GetStatTotalPlaytime\x12).emortal.grpc.GetStatTotalPlaytimeRequest\x1a*.emortal.grpc.GetStatTotalPlaytimeResponse\"\x00\x12u\n" +
	"\x16AddExperienceToPlayers\x12+.emortal.grpc.AddExperienceToPlayersRequest\x1a,.emortal.grpc.AddExperienceToPlayersResponse\"\x00\x12l\n" +
	"\x13GetPlayerExperience\x12(.emortal.grpc.GetPlayerExperienceRequest\x1a).emortal.grpc.GetPlayerExperienceResponse\"\x002\x99\x04\n" +
	"\rPlayerTracker\x12a\n" +
	"\x10GetPlayerServers\x12%.emortal.grpc.GetPlayerServersRequest\x1a&.emortal.grpc.GetPlayerServersResponse\x12a\n" +
	"\x10GetServerPlayers\x12%.emortal.grpc.GetServerPlayersRequest\x1a&.emortal.grpc.GetServerPlayersResponse\x12[\n" +
	"\x0eGetPlayerCount\x12#.emortal.grpc.GetPlayerCountRequest\x1a$.emortal.grpc.GetPlayerCountResponse\x12m\n" +
	"\x14GetFleetPlayerCounts\x12).emortal.grpc.GetFleetsPlayerCountRequest\x1a*.emortal.grpc.GetFleetsPlayerCountResponse\x12v\n" +
	"\x17GetGlobalPlayersSummary\x12,.emortal.grpc.GetGlobalPlayersSummaryRequest\x1a-.emortal.grpc.GetGlobalPlayersSummaryResponseBe\n" +
	"\x1ddev.emortal.api.grpc.mcplayerB\rMcPlayerProtoZ5github.com/emortalmc/proto-specs/gen/go/grpc/mcplayerb\x06proto3"

var (
	file_mc_player_grpc_proto_rawDescOnce sync.Once
	file_mc_player_grpc_proto_rawDescData []byte
)

func file_mc_player_grpc_proto_rawDescGZIP() []byte {
	file_mc_player_grpc_proto_rawDescOnce.Do(func() {
		file_mc_player_grpc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mc_player_grpc_proto_rawDesc), len(file_mc_player_grpc_proto_rawDesc)))
	})
	return file_mc_player_grpc_proto_rawDescData
}

var file_mc_player_grpc_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_mc_player_grpc_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_mc_player_grpc_proto_goTypes = []any{
	(SearchPlayersByUsernameRequest_FilterMethod)(0), // 0: emortal.grpc.SearchPlayersByUsernameRequest.FilterMethod
	(*GetPlayerRequest)(nil),                         // 1: emortal.grpc.GetPlayerRequest
	(*GetPlayerResponse)(nil),                        // 2: emortal.grpc.GetPlayerResponse
	(*GetPlayersRequest)(nil),                        // 3: emortal.grpc.GetPlayersRequest
	(*GetPlayersResponse)(nil),                       // 4: emortal.grpc.GetPlayersResponse
	(*PlayerUsernameRequest)(nil),                    // 5: emortal.grpc.PlayerUsernameRequest
	(*GetPlayerByUsernameResponse)(nil),              // 6: emortal.grpc.GetPlayerByUsernameResponse
	(*McPageablePlayerRequest)(nil),                  // 7: emortal.grpc.McPageablePlayerRequest
	(*SearchPlayersByUsernameRequest)(nil),           // 8: emortal.grpc.SearchPlayersByUsernameRequest
	(*SearchPlayersByUsernameResponse)(nil),          // 9: emortal.grpc.SearchPlayersByUsernameResponse
	(*GetLoginSessionsRequest)(nil),                  // 10: emortal.grpc.GetLoginSessionsRequest
	(*LoginSessionsResponse)(nil),                    // 11: emortal.grpc.LoginSessionsResponse
	(*GetStatTotalUniquePlayersRequest)(nil),         // 12: emortal.grpc.GetStatTotalUniquePlayersRequest
	(*GetStatTotalUniquePlayersResponse)(nil),        // 13: emortal.grpc.GetStatTotalUniquePlayersResponse
	(*GetStatTotalPlaytimeRequest)(nil),              // 14: emortal.grpc.GetStatTotalPlaytimeRequest
	(*GetStatTotalPlaytimeResponse)(nil),             // 15: emortal.grpc.GetStatTotalPlaytimeResponse
	(*GetPlayerServersRequest)(nil),                  // 16: emortal.grpc.GetPlayerServersRequest
	(*GetPlayerServersResponse)(nil),                 // 17: emortal.grpc.GetPlayerServersResponse
	(*GetServerPlayersRequest)(nil),                  // 18: emortal.grpc.GetServerPlayersRequest
	(*GetServerPlayersResponse)(nil),                 // 19: emortal.grpc.GetServerPlayersResponse
	(*GetPlayerCountRequest)(nil),                    // 20: emortal.grpc.GetPlayerCountRequest
	(*GetPlayerCountResponse)(nil),                   // 21: emortal.grpc.GetPlayerCountResponse
	(*GetFleetsPlayerCountRequest)(nil),              // 22: emortal.grpc.GetFleetsPlayerCountRequest
	(*GetFleetsPlayerCountResponse)(nil),             // 23: emortal.grpc.GetFleetsPlayerCountResponse
	(*GetGlobalPlayersSummaryRequest)(nil),           // 24: emortal.grpc.GetGlobalPlayersSummaryRequest
	(*GetGlobalPlayersSummaryResponse)(nil),          // 25: emortal.grpc.GetGlobalPlayersSummaryResponse
	(*AddExperienceToPlayersRequest)(nil),            // 26: emortal.grpc.AddExperienceToPlayersRequest
	(*AddExperienceToPlayersResponse)(nil),           // 27: emortal.grpc.AddExperienceToPlayersResponse
	(*GetPlayerExperienceRequest)(nil),               // 28: emortal.grpc.GetPlayerExperienceRequest
	(*GetPlayerExperienceResponse)(nil),              // 29: emortal.grpc.GetPlayerExperienceResponse
	nil,                                              // 30: emortal.grpc.GetPlayerServersResponse.PlayerServersEntry
	nil,                                              // 31: emortal.grpc.GetFleetsPlayerCountResponse.FleetPlayerCountsEntry
	nil,                                              // 32: emortal.grpc.AddExperienceToPlayersResponse.ExperienceEntry
	(*mcplayer.McPlayer)(nil),                        // 33: emortal.model.McPlayer
	(*common.Pageable)(nil),                          // 34: emortal.model.Pageable
	(*common.PageData)(nil),                          // 35: emortal.model.PageData
	(*mcplayer.LoginSession)(nil),                    // 36: emortal.model.LoginSession
	(*mcplayer.OnlinePlayer)(nil),                    // 37: emortal.model.OnlinePlayer
	(*mcplayer.CurrentServer)(nil),                   // 38: emortal.model.CurrentServer
}
var file_mc_player_grpc_proto_depIdxs = []int32{
	33, // 0: emortal.grpc.GetPlayerResponse.player:type_name -> emortal.model.McPlayer
	33, // 1: emortal.grpc.GetPlayersResponse.players:type_name -> emortal.model.McPlayer
	33, // 2: emortal.grpc.GetPlayerByUsernameResponse.player:type_name -> emortal.model.McPlayer
	34, // 3: emortal.grpc.SearchPlayersByUsernameRequest.pageable:type_name -> emortal.model.Pageable
	0,  // 4: emortal.grpc.SearchPlayersByUsernameRequest.filter_method:type_name -> emortal.grpc.SearchPlayersByUsernameRequest.FilterMethod
	33, // 5: emortal.grpc.SearchPlayersByUsernameResponse.players:type_name -> emortal.model.McPlayer
	35, // 6: emortal.grpc.SearchPlayersByUsernameResponse.page_data:type_name -> emortal.model.PageData
	34, // 7: emortal.grpc.GetLoginSessionsRequest.pageable:type_name -> emortal.model.Pageable
	36, // 8: emortal.grpc.LoginSessionsResponse.sessions:type_name -> emortal.model.LoginSession
	35, // 9: emortal.grpc.LoginSessionsResponse.page_data:type_name -> emortal.model.PageData
	30, // 10: emortal.grpc.GetPlayerServersResponse.player_servers:type_name -> emortal.grpc.GetPlayerServersResponse.PlayerServersEntry
	37, // 11: emortal.grpc.GetServerPlayersResponse.online_players:type_name -> emortal.model.OnlinePlayer
	31, // 12: emortal.grpc.GetFleetsPlayerCountResponse.fleet_player_counts:type_name -> emortal.grpc.GetFleetsPlayerCountResponse.FleetPlayerCountsEntry
	37, // 13: emortal.grpc.GetGlobalPlayersSummaryResponse.players:type_name -> emortal.model.OnlinePlayer
	32, // 14: emortal.grpc.AddExperienceToPlayersResponse.experience:type_name -> emortal.grpc.AddExperienceToPlayersResponse.ExperienceEntry
	38, // 15: emortal.grpc.GetPlayerServersResponse.PlayerServersEntry.value:type_name -> emortal.model.CurrentServer
	1,  // 16: emortal.grpc.McPlayer.GetPlayer:input_type -> emortal.grpc.GetPlayerRequest
	3,  // 17: emortal.grpc.McPlayer.GetPlayers:input_type -> emortal.grpc.GetPlayersRequest
	5,  // 18: emortal.grpc.McPlayer.GetPlayerByUsername:input_type -> emortal.grpc.PlayerUsernameRequest
	8,  // 19: emortal.grpc.McPlayer.SearchPlayersByUsername:input_type -> emortal.grpc.SearchPlayersByUsernameRequest
	10, // 20: emortal.grpc.McPlayer.GetLoginSessions:input_type -> emortal.grpc.GetLoginSessionsRequest
	12, // 21: emortal.grpc.McPlayer.GetStatTotalUniquePlayers:input_type -> emortal.grpc.GetStatTotalUniquePlayersRequest
	14, // 22: emortal.grpc.McPlayer.GetStatTotalPlaytime:input_type -> emortal.grpc.GetStatTotalPlaytimeRequest
	26, // 23: emortal.grpc.McPlayer.AddExperienceToPlayers:input_type -> emortal.grpc.AddExperienceToPlayersRequest
	28, // 24: emortal.grpc.McPlayer.GetPlayerExperience:input_type -> emortal.grpc.GetPlayerExperienceRequest
	16, // 25: emortal.grpc.PlayerTracker.GetPlayerServers:input_type -> emortal.grpc.GetPlayerServersRequest
	18, // 26: emortal.grpc.PlayerTracker.GetServerPlayers:input_type -> emortal.grpc.GetServerPlayersRequest
	20, // 27: emortal.grpc.PlayerTracker.GetPlayerCount:input_type -> emortal.grpc.GetPlayerCountRequest
	22, // 28: emortal.grpc.PlayerTracker.GetFleetPlayerCounts:input_type -> emortal.grpc.GetFleetsPlayerCountRequest
	24, // 29: emortal.grpc.PlayerTracker.GetGlobalPlayersSummary:input_type -> emortal.grpc.GetGlobalPlayersSummaryRequest
	2,  // 30: emortal.grpc.McPlayer.GetPlayer:output_type -> emortal.grpc.GetPlayerResponse
	4,  // 31: emortal.grpc.McPlayer.GetPlayers:output_type -> emortal.grpc.GetPlayersResponse
	6,  // 32: emortal.grpc.McPlayer.GetPlayerByUsername:output_type -> emortal.grpc.GetPlayerByUsernameResponse
	9,  // 33: emortal.grpc.McPlayer.SearchPlayersByUsername:output_type -> emortal.grpc.SearchPlayersByUsernameResponse
	11, // 34: emortal.grpc.McPlayer.GetLoginSessions:output_type -> emortal.grpc.LoginSessionsResponse
	13, // 35: emortal.grpc.McPlayer.GetStatTotalUniquePlayers:output_type -> emortal.grpc.GetStatTotalUniquePlayersResponse
	15, // 36: emortal.grpc.McPlayer.GetStatTotalPlaytime:output_type -> emortal.grpc.GetStatTotalPlaytimeResponse
	27, // 37: emortal.grpc.McPlayer.AddExperienceToPlayers:output_type -> emortal.grpc.AddExperienceToPlayersResponse
	29, // 38: emortal.grpc.McPlayer.GetPlayerExperience:output_type -> emortal.grpc.GetPlayerExperienceResponse
	17, // 39: emortal.grpc.PlayerTracker.GetPlayerServers:output_type -> emortal.grpc.GetPlayerServersResponse
	19, // 40: emortal.grpc.PlayerTracker.GetServerPlayers:output_type -> emortal.grpc.GetServerPlayersResponse
	21, // 41: emortal.grpc.PlayerTracker.GetPlayerCount:output_type -> emortal.grpc.GetPlayerCountResponse
	23, // 42: emortal.grpc.PlayerTracker.GetFleetPlayerCounts:output_type -> emortal.grpc.GetFleetsPlayerCountResponse
	25, // 43: emortal.grpc.PlayerTracker.GetGlobalPlayersSummary:output_type -> emortal.grpc.GetGlobalPlayersSummaryResponse
	30, // [30:44] is the sub-list for method output_type
	16, // [16:30] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_mc_player_grpc_proto_init() }
func file_mc_player_grpc_proto_init() {
	if File_mc_player_grpc_proto != nil {
		return
	}
	file_mc_player_grpc_proto_msgTypes[19].OneofWrappers = []any{}
	file_mc_player_grpc_proto_msgTypes[23].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mc_player_grpc_proto_rawDesc), len(file_mc_player_grpc_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_mc_player_grpc_proto_goTypes,
		DependencyIndexes: file_mc_player_grpc_proto_depIdxs,
		EnumInfos:         file_mc_player_grpc_proto_enumTypes,
		MessageInfos:      file_mc_player_grpc_proto_msgTypes,
	}.Build()
	File_mc_player_grpc_proto = out.File
	file_mc_player_grpc_proto_goTypes = nil
	file_mc_player_grpc_proto_depIdxs = nil
}
